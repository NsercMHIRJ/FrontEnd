{"ast":null,"code":"var _jsxFileName = \"/Users/navneetbhatti/Desktop/FrontEnd/src/Components/MdcMessages/Reports/Rawdata/RawMdcMessages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport RawDataTable from './RawDataTable';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport DatePicker from '../../GenerateReport/DatePicker';\nimport { AirlineOperatorSelector, ATAMainSelector, MessagesSelector, EqIDSelector } from '../../GenerateReport/Selectors';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  form: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1)\n    }\n  },\n  paper: {\n    margin: '50px auto 23px 20px',\n    width: '92vw'\n  },\n  container: {\n    padding: '10px 40px'\n  },\n  Grid: {\n    padding: '20px 5px 20px 30px',\n    margin: 'auto'\n  },\n  card: {\n    backgroundColor: \"#C5D3E0\",\n    textAlign: 'center',\n    justify: 'center',\n    padding: '5px'\n  },\n  formLabel: {\n    fontWeight: 'bold',\n    color: 'black',\n    marginBottom: '20px'\n  },\n  button: {\n    margin: '50px 30px',\n    padding: '10px',\n    backgroundColor: \"#C5D3E0\"\n  },\n  EqSelector: {\n    marginTop: '9px',\n    marginRight: '0px',\n    width: '100px'\n  },\n  ATASelector: {// marginTop:'9px',\n  },\n  h3: {\n    marginLeft: '5px',\n    fontSize: '20px'\n  }\n}));\n\nconst RawMdcMessages = () => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [RDValue, setRDValue] = useState(0);\n  const classes = useStyles(); // ----- States and handle Functions for Date  ----- \n\n  const [dateFrom, setDateFrom] = useState();\n  const [dateTo, setDateTo] = useState();\n\n  const handleDateFrom = date => {\n    setDateFrom(date);\n  };\n\n  const handleDateTo = date => {\n    setDateTo(date);\n  }; // ----- States and handle Functions for Selects  ----- \n\n\n  const [airline, setAilineType] = useState();\n  const [ATAMain, setATAMain] = React.useState('');\n  const [messagesChoice, setIncludeMessages] = React.useState('');\n  const [EqID, setEqID] = React.useState('');\n  const [rawData, setRawData] = React.useState('');\n  const [flag, setFlag] = useState(false);\n\n  const handleAirlineChange = Airline => {\n    setAilineType(Airline);\n  };\n\n  const handleATAChange = ATA => {\n    setATAMain(ATA);\n  };\n\n  const handleMessagesChange = messages => {\n    setIncludeMessages(messages);\n  };\n\n  const handleEqIDChange = eqIDList => {\n    setEqID(eqIDList);\n  }; // ----- States and handle Functions for Generate Report  ----- \n\n\n  const [rawDataConditions, setRawDataConditions] = React.useState({\n    operator: '',\n    ata: '',\n    eqID: '',\n    messages: '',\n    fromDate: '',\n    toDate: ''\n  });\n\n  const handleGenerateReport = event => {\n    setRawDataConditions({\n      operator: airline,\n      ata: ATAMain,\n      eqID: EqID,\n      messages: messagesChoice,\n      fromDate: dateFrom,\n      toDate: dateTo\n    });\n    setRawData([]);\n    setRDValue(1);\n    setLoading(true);\n  };\n\n  useEffect(() => {\n    let flag = false;\n    Object.values(rawDataConditions).map(item => {\n      if (item === \"\" || item === \"('')\") {\n        flag = true;\n        setLoading(false);\n      }\n    });\n\n    if (flag === false) {\n      const path = 'http://20.85.211.143:8080/api/MDCRawData/' + rawDataConditions.ata + '/' + rawDataConditions.eqID + '/' + rawDataConditions.operator + '/' + rawDataConditions.messages + '/' + rawDataConditions.fromDate + '/' + rawDataConditions.toDate;\n      axios.post(path).then(function (res) {\n        var data = JSON.parse(res.data);\n        setRawData(data);\n        setLoading(false);\n      }).catch(function (err) {\n        console.log(err);\n        setLoading(false);\n      });\n    }\n  }, [rawDataConditions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.card,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"RAW DATA FILTERS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          className: classes.Grid,\n          container: true,\n          spacing: 0,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: [/*#__PURE__*/_jsxDEV(AirlineOperatorSelector, {\n              handleAirlineChange: handleAirlineChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(MessagesSelector, {\n              handleMessagesChange: handleMessagesChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            className: classes.ATASelector,\n            item: true,\n            xs: 6,\n            children: [/*#__PURE__*/_jsxDEV(ATAMainSelector, {\n              handleATAChange: handleATAChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(EqIDSelector, {\n              handleEqIDChange: handleEqIDChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"From\",\n              handleDateFrom: handleDateFrom\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"To\",\n              handleDateTo: handleDateTo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => handleGenerateReport(),\n              className: classes.button,\n              children: \"Filter Raw Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 6\n    }, this), rawData !== \"\" && rawData !== \"undefined\" && RDValue === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(RawDataTable, {\n        data: rawData,\n        rawDataConditions: rawDataConditions,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RawMdcMessages, \"rcQ/IxQORsQtPa0ezAmElFtcJbk=\", false, function () {\n  return [useStyles];\n});\n\n_c = RawMdcMessages;\nexport default RawMdcMessages;\n\nvar _c;\n\n$RefreshReg$(_c, \"RawMdcMessages\");","map":{"version":3,"sources":["/Users/navneetbhatti/Desktop/FrontEnd/src/Components/MdcMessages/Reports/Rawdata/RawMdcMessages.js"],"names":["React","useEffect","useState","RawDataTable","makeStyles","Grid","Paper","DatePicker","AirlineOperatorSelector","ATAMainSelector","MessagesSelector","EqIDSelector","Button","axios","useStyles","theme","root","flexGrow","form","margin","spacing","paper","width","container","padding","card","backgroundColor","textAlign","justify","formLabel","fontWeight","color","marginBottom","button","EqSelector","marginTop","marginRight","ATASelector","h3","marginLeft","fontSize","RawMdcMessages","loading","setLoading","RDValue","setRDValue","classes","dateFrom","setDateFrom","dateTo","setDateTo","handleDateFrom","date","handleDateTo","airline","setAilineType","ATAMain","setATAMain","messagesChoice","setIncludeMessages","EqID","setEqID","rawData","setRawData","flag","setFlag","handleAirlineChange","Airline","handleATAChange","ATA","handleMessagesChange","messages","handleEqIDChange","eqIDList","rawDataConditions","setRawDataConditions","operator","ata","eqID","fromDate","toDate","handleGenerateReport","event","Object","values","map","item","path","post","then","res","data","JSON","parse","catch","err","console","log"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react';\nimport RawDataTable from './RawDataTable';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport DatePicker from '../../GenerateReport/DatePicker';\nimport {AirlineOperatorSelector,ATAMainSelector,MessagesSelector,EqIDSelector} from '../../GenerateReport/Selectors';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\nroot: {\n  flexGrow: 1,\n},\n  form:{\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n  },\n},\npaper: {\n  margin: '50px auto 23px 20px',\n  width: '92vw',\n},\ncontainer: {\n  padding: '10px 40px',\n},\nGrid:{\n  padding:'20px 5px 20px 30px',\n  margin: 'auto',\n},\ncard:{\n  backgroundColor: \"#C5D3E0\",\n  textAlign: 'center',\n  justify: 'center',\n  padding: '5px',\n},\nformLabel:{\n  fontWeight: 'bold',\n  color: 'black',\n  marginBottom: '20px',\n},\n  button:{\n    margin:'50px 30px',\n    padding: '10px',\n    backgroundColor:\"#C5D3E0\",\n  },\n  EqSelector:{\n    marginTop:'9px',\n    marginRight:'0px',\n    width:'100px',\n  },\n  ATASelector:{\n    // marginTop:'9px',\n  },\n  h3:{\n    marginLeft: '5px',\n    fontSize:'20px',\n  },\n}));\n\nconst RawMdcMessages = () => {\n  const [loading, setLoading] = useState(true);\n  const [RDValue,setRDValue] = useState(0);\n  const classes = useStyles();\n\n  // ----- States and handle Functions for Date  ----- \n  const [dateFrom, setDateFrom] = useState();\n  const [dateTo, setDateTo] = useState();\n\n  const handleDateFrom = (date) => {\n    setDateFrom(date);\n  };\n\n  const handleDateTo = (date) => {\n    setDateTo(date);\n  };\n// ----- States and handle Functions for Selects  ----- \nconst [airline, setAilineType] = useState();\nconst [ATAMain, setATAMain] = React.useState('');\nconst [messagesChoice, setIncludeMessages] = React.useState('');\nconst [EqID, setEqID] = React.useState('');\nconst [rawData, setRawData] = React.useState('');\nconst [flag,setFlag] = useState(false);\n\nconst handleAirlineChange = (Airline) => {\n  setAilineType(Airline);\n};\n\nconst handleATAChange = (ATA) => {\n  setATAMain(ATA);\n};\n\nconst handleMessagesChange = (messages) => {\n  setIncludeMessages(messages);\n};\n\nconst handleEqIDChange = (eqIDList) => {\n  setEqID(eqIDList);\n};\n\n// ----- States and handle Functions for Generate Report  ----- \nconst [rawDataConditions, setRawDataConditions] = React.useState(\n  {\n    operator: '',\n    ata: '',\n    eqID: '',\n    messages: '',\n    fromDate: '',\n    toDate: '',\n  }\n );\n\nconst handleGenerateReport = (event) => {\n  setRawDataConditions(\n    {\n      operator: airline,\n      ata: ATAMain,\n      eqID: EqID,\n      messages: messagesChoice,\n      fromDate: dateFrom,\n      toDate: dateTo,\n    },\n  );\n  setRawData([]);\n  setRDValue(1);\n  setLoading(true);\n  }\n\nuseEffect(() => {\n  let flag = false;\n Object.values(rawDataConditions).map(item => {\n   if (item === \"\" || item === \"('')\"){\n     flag = true;\n     setLoading(false);\n   }\n });\n\n if (flag === false) {  \n    const path = 'http://20.85.211.143:8080/api/MDCRawData/' + rawDataConditions.ata + '/' + rawDataConditions.eqID + '/' + rawDataConditions.operator + \n    '/' + rawDataConditions.messages + '/' + rawDataConditions.fromDate + '/' + rawDataConditions.toDate;\n\n      axios.post(path).then(function (res) {\n        var data = JSON.parse(res.data);\n          setRawData(data);\n          setLoading(false);\n      }).catch(function (err){\n            console.log(err);\n            setLoading(false);\n          })\n      }\n  },[rawDataConditions]);\n\n  return (\n    <div className={classes.root}>   \n     <form className={classes.form}>\n      <Paper className={classes.paper}>\n        <div className ={classes.card}>\n          <h2>RAW DATA FILTERS</h2>\n        </div>\n         <Grid className={classes.Grid} container spacing={0}> \n            <Grid item xs={2}>\n            <AirlineOperatorSelector\n                handleAirlineChange = {handleAirlineChange}                \n              />     \n              <MessagesSelector \n                handleMessagesChange = {handleMessagesChange}\n              />\n            </Grid>\n            <Grid className={classes.ATASelector} item xs={6}>\n            <ATAMainSelector \n                handleATAChange = {handleATAChange}\n              /> \n              <EqIDSelector \n                handleEqIDChange = {handleEqIDChange}\n              />   \n            </Grid>\n            <Grid item xs={2}>\n            <DatePicker \n              label = \"From\"\n              handleDateFrom = {handleDateFrom}\n            />   \n            <DatePicker \n              label = \"To\"\n              handleDateTo = {handleDateTo}\n            /> \n            </Grid>\n            <Grid item xs={2}>\n              <Button \n                variant=\"contained\" \n                onClick = {()=>handleGenerateReport()}\n                className={classes.button}>\n                  Filter Raw Data\n              </Button>                 \n            </Grid>\n          </Grid>\n     </Paper>\n     </form>\n     {rawData !== \"\" && rawData !== \"undefined\" && RDValue === 1 &&\n        <>\n          <RawDataTable\n            data = {rawData}\n            rawDataConditions = {rawDataConditions}\n            loading = {loading}\n          />\n      </>\n     }\n    </div> \n  );\n};\n\nexport default RawMdcMessages;"]},"metadata":{},"sourceType":"module"}