[{"/Users/navneetbhatti/Desktop/FrontEnd/src/index.js":"1","/Users/navneetbhatti/Desktop/FrontEnd/src/App.js":"2","/Users/navneetbhatti/Desktop/FrontEnd/src/reportWebVitals.js":"3","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Home.js":"4","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Corr.js":"5","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Chart1.js":"6","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Chart2.js":"7","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Chart3.js":"8","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Chart4.js":"9","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Chart5.js":"10","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Scatter1.js":"11","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Stacked.js":"12","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Correlation/Correlation.js":"13","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/MdcMessages/GenerateReport/Analysis.js":"14","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/MdcMessages/Reports/Report.js":"15","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/MdcMessages/Reports/FlagReport/FlagReport.js":"16","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/MdcMessages/Reports/Rawdata/RawMdcMessages.js":"17","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Correlation/PMTable.js":"18","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/MdcMessages/GenerateReport/Selectors.js":"19","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/MdcMessages/GenerateReport/DatePicker.js":"20","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/MdcMessages/Reports/Rawdata/RawDataTable.js":"21","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/MdcMessages/GenerateReport/Conditions.js":"22","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/MdcMessages/Reports/HistoryReport/HistoryReport.js":"23","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Helper/Helper.js":"24","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/MdcMessages/Reports/DailyReport/DailyReport.js":"25","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Correlation/CorrelationSubTable.js":"26","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/DateConverter.js":"27","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/MdcMessages/GenerateReport/AnalysisInput.js":"28"},{"size":500,"mtime":1624336661727,"results":"29","hashOfConfig":"30"},{"size":15632,"mtime":1624336661719,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1624336661728,"results":"32","hashOfConfig":"30"},{"size":8316,"mtime":1624336863007,"results":"33","hashOfConfig":"30"},{"size":122,"mtime":1624336661721,"results":"34","hashOfConfig":"30"},{"size":5529,"mtime":1624336863007,"results":"35","hashOfConfig":"30"},{"size":5506,"mtime":1624336863007,"results":"36","hashOfConfig":"30"},{"size":6961,"mtime":1624336863007,"results":"37","hashOfConfig":"30"},{"size":5395,"mtime":1624336661720,"results":"38","hashOfConfig":"30"},{"size":6783,"mtime":1624336863007,"results":"39","hashOfConfig":"30"},{"size":5870,"mtime":1624336863007,"results":"40","hashOfConfig":"30"},{"size":6222,"mtime":1624336863007,"results":"41","hashOfConfig":"30"},{"size":399,"mtime":1624336661721,"results":"42","hashOfConfig":"30"},{"size":402,"mtime":1624336661723,"results":"43","hashOfConfig":"30"},{"size":5620,"mtime":1624336863007,"results":"44","hashOfConfig":"30"},{"size":5189,"mtime":1624336661725,"results":"45","hashOfConfig":"30"},{"size":5376,"mtime":1624336863007,"results":"46","hashOfConfig":"30"},{"size":11570,"mtime":1624336863007,"results":"47","hashOfConfig":"30"},{"size":5600,"mtime":1624336863008,"results":"48","hashOfConfig":"30"},{"size":1210,"mtime":1624336661724,"results":"49","hashOfConfig":"30"},{"size":7119,"mtime":1624336661726,"results":"50","hashOfConfig":"30"},{"size":6923,"mtime":1624336661724,"results":"51","hashOfConfig":"30"},{"size":7832,"mtime":1624336661725,"results":"52","hashOfConfig":"30"},{"size":362,"mtime":1624336661722,"results":"53","hashOfConfig":"30"},{"size":7031,"mtime":1624336661724,"results":"54","hashOfConfig":"30"},{"size":6478,"mtime":1624336863007,"results":"55","hashOfConfig":"30"},{"size":235,"mtime":1624336661722,"results":"56","hashOfConfig":"30"},{"size":2660,"mtime":1624336661723,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tedyyy",{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/navneetbhatti/Desktop/FrontEnd/src/index.js",[],"/Users/navneetbhatti/Desktop/FrontEnd/src/App.js",["132","133","134","135","136","137","138","139"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InfoSharpIcon from '@material-ui/icons/InfoSharp';\nimport EqualizerSharpIcon from '@material-ui/icons/EqualizerSharp';\nimport ShowChartSharpIcon from '@material-ui/icons/ShowChartSharp';\nimport Button from '@material-ui/core/Button';\nimport TableChartSharpIcon from '@material-ui/icons/TableChartSharp';\nimport AssessmentSharpIcon from '@material-ui/icons/AssessmentSharp';\nimport mhirjLogoColored from './mhirjLogoColored.svg';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport TocSharpIcon from '@material-ui/icons/TocSharp';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from './Components/Home';\nimport Corr from './Components/Corr';\nimport Chart1 from './Components/Chart1';\nimport Chart2 from './Components/Chart2';\nimport Chart3 from './Components/Chart3';\nimport Chart4 from './Components/Chart4';\nimport Chart5 from './Components/Chart5';\nimport Scatter1 from './Components/Scatter1';\nimport Stacked from './Components/Stacked';\nimport Analysis from './Components/MdcMessages/GenerateReport/Analysis';\nimport Report from './Components/MdcMessages/Reports/Report';\nimport Correlation from './Components/Correlation/Correlation';\nimport FlagReport from './Components/MdcMessages/Reports/FlagReport/FlagReport';\nimport TimelineSharpIcon from '@material-ui/icons/TimelineSharp';\nimport Rawdata from './Components/MdcMessages/Reports/Rawdata/RawMdcMessages';\nimport TrendingUpSharpIcon from '@material-ui/icons/TrendingUpSharp';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\n\nconst drawerWidth = 330;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n\n    }),\n    backgroundColor: \"#c5d3e0\",\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    backgroundColor: \"#c5d3e0\",\n  },\n  menuButton: {\n    marginRight: 36,\n    color: \"#001c3e\",\n  },\n  hide: {\n    display: 'none',\n\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    backgroundColor: \"#c5d3e0\",\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(9) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(8) + 1,\n    },\n    backgroundColor: \"#c5d3e0\",\n\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    height: \"78px\",\n    backgroundColor: \"#f3f2f1\",\n  },\n  content: {\n    flexGrow: -1,\n    padding: theme.spacing(0),\n\n  },\n  tabContent: {\n    width: \"100%\",\n    padding: \"15px 5px 15px 20px\",\n  },\n  icon: {\n    paddingRight: \"10px\",\n    width: \"30px\",\n    height: \"50px\",\n    color: \"#001c3e\",\n\n  },\n  typography: {\n    useNextVariants: true,\n    color: \"#272727\",\n  },\n  nested: {\n    paddingLeft: theme.spacing(3),\n  },\n  nested_1: {\n    paddingLeft: theme.spacing(3),\n  },\n}));\n\n\n\nexport default function MiniDrawer() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const [page, setPage] = React.useState(\"main\");\n  const [openMDC, setOpenMDC] = React.useState(false);\n  const [openMAIN, setOpenMAIN] = React.useState(false);\n  const [openGraphs, setOpenGraphs] = React.useState(false);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClickAway = () => {\n    setOpen(false);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const handleOnClick = (page) => {\n    setPage(page);\n\n  };\n  const handleClick = () => {\n    setOpenMDC(!openMDC);\n  };\n  const handleMainClick = () => {\n    setOpenMAIN(!openMAIN);\n  };\n  const handleGraphsClick = () => {\n    setOpenGraphs(!openGraphs);\n  };\n  return (\n\n    <div className={classes.root}>\n      <Router>\n        <CssBaseline />\n        <AppBar\n          color=\"primary\"\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}>\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, {\n                [classes.hide]: open,\n              })}>\n              <MenuIcon />\n            </IconButton>\n            <img src={mhirjLogoColored} style={{ height: 78, width: 150 }} />\n            <typography style={{ color: \"#001c3e\", fontSize: \"24px\", fontFamily: \"Times New Roman\" }}>MDC Trend Analysis Tool</typography>\n          </Toolbar>\n        </AppBar>\n        <ClickAwayListener\n            mouseEvent=\"onMouseDown\"\n            touchEvent=\"onTouchStart\"\n            onClickAway={handleClickAway}\n          >\n        <Drawer\n          variant=\"permanent\"\n          className={clsx(classes.drawer, {\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          })}\n          classes={{\n            paper: clsx({\n              [classes.drawerOpen]: open,\n              [classes.drawerClose]: !open,\n            }),\n          }}>\n       \n          <div className={classes.toolbar}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === 'rtl' ? <ChevronRightIcon style={{ color: \"#001c3e\" }} /> : <ChevronLeftIcon style={{ color: \"#001c3e\" }} />}\n            </IconButton>\n          </div>\n          \n          <Divider />\n          <List>\n            <ListItem button onClick={handleMainClick} disablePadding>\n              <Link to=\"/\" style={{ textDecoration: 'none' }}>\n                <ListItemIcon>\n                  <InfoSharpIcon style={{ color: \"#001c3e\" }} />\n                </ListItemIcon>\n                <Button variant=\"contained\" color=\"#92A0AD\">\n                  <typography>Main</typography>\n                  {openMAIN ? <ExpandLess /> : <ExpandMore />}\n                </Button>\n              </Link>\n            </ListItem>\n            <Collapse in={openMAIN} timeout=\"auto\" unmountOnExit>\n\n              <List component=\"div\" disablePadding>\n                <Link to=\"/Scatter1\" style={{ textDecoration: 'none' }}>\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <TrendingUpSharpIcon style={{ color: \"#001c3e\" }} />\n                    </ListItemIcon>\n                    <ListItemText primary=\"SCATTER\" style={{ color: \"#001c3e\" }} />\n                  </ListItem>\n                </Link>\n              </List>\n\n              <List component=\"div\" disablePadding>\n                <Link to=\"/Stacked\" style={{ textDecoration: 'none' }}>\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <TrendingUpSharpIcon style={{ color: \"#001c3e\" }} />\n                    </ListItemIcon>\n                    <ListItemText primary=\"STACKED\" style={{ color: \"#001c3e\" }} />\n                  </ListItem>\n                </Link>\n              </List>\n            </Collapse>\n\n            <ListItem button onClick={handleClick} disablePadding>\n              <ListItemIcon>\n                <TableChartSharpIcon style={{ color: \"#001c3e\" }} />\n              </ListItemIcon>\n              <Button variant=\"contained\" color=\"#001c3e\">\n                <typography>MDC</typography>\n                {openMDC ? <ExpandLess /> : <ExpandMore />}\n              </Button>\n            </ListItem>\n\n            <Collapse in={openMDC} timeout=\"auto\" unmountOnExit>\n\n              <List component=\"div\" disablePadding>\n                <Link to=\"/analysis\" style={{ textDecoration: 'none' }}>\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <TrendingUpSharpIcon style={{ color: \"#001c3e\" }} />\n                    </ListItemIcon>\n                    <ListItemText primary=\"ANALYSIS\" style={{ color: \"#001c3e\" }} />\n                  </ListItem>\n                </Link>\n              </List>\n\n              <List component=\"div\" disablePadding>\n\n                <ListItem button className={classes.nested} button onClick={handleGraphsClick}>\n                  <ListItemIcon>\n                    <TimelineSharpIcon style={{ color: \"#001c3e\" }} />\n                  </ListItemIcon>\n                  <Button color=\"#001c3e\" style={{ fontSize: \"16px\" }}>\n                    <typography>Graphs </typography>\n                    {openGraphs ? <ExpandLess /> : <ExpandMore />}\n                  </Button>\n                </ListItem>\n\n                <Collapse in={openGraphs} timeout=\"auto\" unmountOnExit>\n                  <List component=\"div\" disablePadding>\n                    <Link to=\"/Chart1\" style={{ textDecoration: 'none' }}>\n                      <ListItem button className={classes.nested_1}>\n                        <ListItemIcon>\n                          <EqualizerSharpIcon style={{ color: \"#001c3e\" }} />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Message Logged per Aircraft\" style={{ color: \"#001c3e\" }} />\n                      </ListItem>\n                    </Link>\n                  </List>\n\n                  <List component=\"div\" disablePadding>\n                    <Link to=\"/Chart2\" style={{ textDecoration: 'none' }}>\n                      <ListItem button className={classes.nested_1}>\n                        <ListItemIcon>\n                          <EqualizerSharpIcon style={{ color: \"#001c3e\" }} />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Top Aircraft by ATA\" style={{ color: \"#001c3e\" }} />\n                      </ListItem>\n                    </Link>\n                  </List>\n\n                  <List component=\"div\" disablePadding>\n                    <Link to=\"/Chart3\" style={{ textDecoration: 'none' }}>\n                      <ListItem button className={classes.nested_1}>\n                        <ListItemIcon>\n                          <ShowChartSharpIcon style={{ color: \"#001c3e\" }} />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Message Trend by Aircraft\" style={{ color: \"#001c3e\" }} />\n                      </ListItem>\n                    </Link>\n                  </List>\n\n                  {/* <List component=\"div\" disablePadding>\n                      <Link to=\"/Chart4\" style={{ textDecoration: 'none' }}>\n                        <ListItem button className={classes.nested_1}>\n                          <ListItemIcon>\n                            <ShowChartSharpIcon style={{ color: \"#001c3e\" }} />\n                          </ListItemIcon>\n                          <ListItemText primary=\"Top ATA in Reports\" style={{ color: \"#001c3e\" }} />\n                        </ListItem>\n                      </Link>\n                    </List> */}\n\n                  <List component=\"div\" disablePadding>\n                    <Link to=\"/Chart5\" style={{ textDecoration: 'none' }}>\n                      <ListItem button className={classes.nested_1}>\n                        <ListItemIcon>\n                          <ShowChartSharpIcon style={{ color: \"#001c3e\" }} />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Message Intermittency per Aircraft\" style={{ color: \"#001c3e\" }} />\n                      </ListItem>\n                    </Link>\n                  </List>\n                </Collapse>\n              </List>\n\n\n              <List component=\"div\" disablePadding>\n                <Link to=\"/rawdata\" style={{ textDecoration: 'none' }}>\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <TocSharpIcon style={{ color: \"#001c3e\" }} />\n                    </ListItemIcon>\n                    <ListItemText primary=\"RAW DATA\" style={{ color: \"#001c3e\" }} />\n                  </ListItem>\n                </Link>\n              </List>\n            </Collapse>\n\n            <ListItem >\n              <Link to=\"/corr\" style={{ textDecoration: 'none' }}>\n                <ListItemIcon>\n                  <AssessmentSharpIcon style={{ color: \"#001c3e\" }} />\n                </ListItemIcon>\n                <Button variant=\"contained\" color=\"#d8e4f0\">\n                  <typography>Correlation</typography>\n                </Button>\n              </Link>\n            </ListItem>\n\n          </List>\n\n          <Divider />\n        </Drawer>\n        </ClickAwayListener>\n        \n\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/Scatter1\">\n              <Scatter1 />\n            </Route>\n            <Route path=\"/Stacked\">\n              <Stacked />\n            </Route>\n            <Route path=\"/rawdata\">\n              <Rawdata />\n            </Route>\n            {/* <Route path=\"/graphs\">\n            <Graphs />\n          </Route> */}\n            <Route path=\"/Chart1\">\n              <Chart1 />\n            </Route>\n            <Route path=\"/Chart2\">\n              <Chart2 />\n            </Route>\n            <Route path=\"/Chart3\">\n              <Chart3 />\n            </Route>\n            {/* <Route path=\"/Chart4\">\n            <Chart4 />\n          </Route> */}\n            <Route path=\"/Chart5\">\n              <Chart5 />\n            </Route>\n            <Route path=\"/analysis\">\n              <Analysis />\n            </Route>\n            <Route path=\"/report\">\n              <Report />\n            </Route>\n            <Route path=\"/flag\">\n              <FlagReport />\n            </Route>\n            <Route path=\"/corr\">\n              <Correlation />\n            </Route>\n          </Switch>\n        </main>\n\n      </Router>\n\n    </div>\n  );\n}\n","/Users/navneetbhatti/Desktop/FrontEnd/src/reportWebVitals.js",[],"/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Home.js",["140","141","142","143","144","145","146"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { Scatter, HorizontalBar, Bar } from 'react-chartjs-2';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginLeft: '25px',\n    marginTop: '25px',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    width: theme.spacing(185),\n    height: theme.spacing(120),\n  },\n}));\n\n\nexport default function Chart1() {\n\n  const classes = useStyles();\n  const ChartJsImage = require('chartjs-to-image');\n  const [chartData1, setChartData1] = useState({});\n  const [chartData2, setChartData2] = useState({});\n\n  let pmMessage = [];\n  let aircraftno_scatter = [];\n\n  useEffect(() => {\n    const path = 'https://mhirjapi.azurewebsites.net/api/Landing_Chart_B'\n   // const path = 'http://40.82.160.131/api/Landing_Chart_B'\n\n\n    axios.post(path)\n      .then(res => {\n        let data = JSON.parse(res.data);\n        let aircraftNos = Object.keys(data);\n        let dataMetaData = {};\n        aircraftNos.map(no => {\n          let airCraftObj = data[no];\n          for (let x in airCraftObj) {\n            if (dataMetaData[x]) dataMetaData[x].push(airCraftObj[x]);\n            else dataMetaData[x] = [airCraftObj[x]];\n          }\n        })\n\n\n        const getUniqueBackgroundColor = (code) => {\n          switch (code) {\n            case '21':\n              return \"#ef5350\";\n            case '22':\n              return \"#ec407a\";\n            case '23':\n              return \"#ab47bc\";\n            case '24':\n              return \"#7e57c2\";\n            case '26':\n              return \"#5c6bc0\";\n            case '27':\n              return \"#42a5f5\";\n            case '28':\n              return \"#29b6f6\";\n            case '30':\n              return \"#26c6da\";\n            case '31':\n              return \"#26a69a\";\n            case '32':\n              return \"#66bb6a\";\n            case '33':\n              return \"#9ccc65\";\n            case '34':\n              return \"#d4e157\";\n            case '36':\n              return \"#ffee58\";\n            case '38':\n              return \"#ffca28\";\n            case '45':\n              return \"#ffa726\";\n            case '49':\n              return \"#8d6e63\";\n            case '71':\n              return \"#bdbdbd\";\n            case '77':\n              return \"#9e9d24\";\n            case '78':\n              return \"#ff7043\";\n          }\n        }\n\n        const intiDataSet = (dataMetaData) => {\n          let codes = Object.keys(dataMetaData);\n          let finalDataset = [];\n          codes.map(code => {\n            let dataObj = {};\n            dataObj.label = code;\n            dataObj.data = dataMetaData[code];\n            dataObj.backgroundColor = getUniqueBackgroundColor(code);\n            finalDataset.push(dataObj);\n            dataObj.borderWidth = 0.5;\n            dataObj.borderColor = \"black\";\n          });\n          return finalDataset;\n        }\n        // console.log(\"aircraftNos=\",aircraftNos);\n        setChartData1({\n          labels: aircraftNos,\n          datasets: intiDataSet(dataMetaData)\n\n        });\n\n      })\n      .catch(err => {\n        //console.log(err);\n      });\n\n    //  console.log(aircraftno);\n    //  console.log(ata_main);\n    //  console.log(msg);\n\n\n    const path1 = 'https://mhirjapi.azurewebsites.net/api/scatter_chart_MDC_PM'\n    //const path1 = 'http://40.82.160.131/api/scatter_chart_MDC_PM'\n\n\n    axios.post(path1).then(res => {\n      //console.log(res,\"response\");\n\n      for (const dataObj of JSON.parse(res.data)) {\n        let mdc = parseInt(dataObj.MDC_Message_Cnt)\n        let pm = parseInt(dataObj.MX_actions)\n        aircraftno_scatter.push(dataObj.aircraftno)\n        pmMessage.push({ \"x\": mdc, \"y\": pm })\n\n      }\n\n\n      // const getUniqueBackgroundColorScatter = (pmMessage) => {\n      //   switch(pmMessage){\n      //     case ((pmMessage.x >= 0 && pmMessage.x <= 400) ||  (pmMessage.y >=0 && pmMessage.y <= 40)) :\n      //       return \"#ef5350\";\n      //   }\n      // }\n\n      const intiDataSet_Scatter = (pmMessage) => {\n        let finalDatasetScatter = [];\n        let dataObjScatter = {};\n        //dataObjScatter.label = \"\";\n        dataObjScatter.data = pmMessage;\n        dataObjScatter.backgroundColor = \"#d8e4f0\";\n        dataObjScatter.borderWidth = '2';\n        dataObjScatter.borderColor = \"black\";\n        dataObjScatter.pointRadius = '6';\n        finalDatasetScatter.push(dataObjScatter);\n\n        return finalDatasetScatter;\n      };\n\n      setChartData2({\n        labels: aircraftno_scatter,\n        datasets: intiDataSet_Scatter(pmMessage)\n      })\n\n\n    })\n      .catch(err => {\n        //console.log(err);\n      });\n\n  }, []);\n\n  return (\n\n    <div className={classes.root}>\n      <Grid container spacing={12}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <form className={classes.root1}>\n              <div><h2 style={{ color: \"#001C3E\", textAlign: \"center\" }}>FLEET STATUS FOR LAST 7 DAYS</h2></div>\n            </form>\n            <Scatter\n              id=\"chart1\"\n              data={chartData2}\n              options={{\n                legend: { display: false },\n                tooltips: {\n                  displayColors: false,\n                  backgroundColor: 'black',\n                  titleFontColor: 'rgb(255,255,255)',\n                  bodyFontColor: 'rgb(255,255,255)',\n                  footerFontColor: 'rgb(255,255,255)',\n                  footerFontStyle: 'normal',\n                  callbacks: {\n                    title: function (item, everything) {\n                      return;\n                    },\n                    label: function (item, everything) {\n                      console.log(item, everything);\n                      let ind = item.index;\n                      let aircraft_name = everything.labels[ind];\n                      return \"Aircraft: \" + aircraft_name;\n                    },\n\n                    footer: function (item, everything) {\n                      console.log(item, everything);\n                      let xvalue = item[0].xLabel;\n                      let yvalue = item[0].yLabel;\n                      return \"x =\" + xvalue +','+\" y = \" + yvalue;\n\n                    }\n                  }\n                },\n                scales: {\n                  xAxes: [{\n                    type: 'linear',\n                    scaleLabel: {\n                      display: true,\n                      labelString: '# of MDC Messages- Last 7 days',\n                      fontStyle: 'bold',\n                      fontColor: '#001C3E'\n\n                    },\n                    position: 'bottom'\n                  }],\n                  yAxes: [{\n                    display: true,\n                    scaleLabel: {\n                      display: true,\n                      labelString: '# of log-book entries',\n                      fontStyle: 'bold',\n                      fontColor: '#001C3E'\n                    }\n                  }],\n                  title: { display: false, text: 'Scatter Plot', fontSize: 20 },\n\n                }\n              }}\n            />\n          </Paper>\n          <Paper className={classes.paper}>\n            <form className={classes.root1}>\n              <div><h2 style={{ color: \"#001C3E\", textAlign: \"center\" }}>MAGNITUDE OF MESSAGES IN DATA</h2></div>\n            </form>\n            <HorizontalBar\n              data={chartData1}\n              options={{\n\n                legend: {\n                  display: true,\n                  position: 'right'\n                },\n                scales: {\n                  xAxes: [{\n                    stacked: true\n                  }],\n                  yAxes: [{\n                    barPercentage: 0.5,\n                    scaleLabel: {\n                      display: true,\n                      labelString: 'Aircraft Serial Number',\n                      fontStyle: 'bold',\n                      fontColor: '#001C3E'\n                    },\n                    stacked: true\n                  }]\n                }\n              }}\n            /></Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n\n}\n","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Corr.js",[],"/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Chart1.js",["147","148"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport {HorizontalBar} from 'react-chartjs-2';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginLeft: '25px',\n    marginTop: '25px',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    width: theme.spacing(185),\n    height: theme.spacing(120),\n  },\n}));\n\n\nexport default function Chart1() {\n  const classes = useStyles();\n  const ChartJsImage = require('chartjs-to-image');\n  const [chartData1, setChartData1] = useState({});\n\n  const [data_chart1, setData_chart1] = useState({\n    aircraft_no: \"\",\n    top_value: \"\",\n    from_date: \"\",\n    to_date: \"\"\n  });\n\n  function save(e) {\n    //save to png\n    const canvasSave = document.getElementById('chart1');\n    canvasSave.toBlob(function (blob) {\n      saveAs(blob, \"Chart1.png\")\n    })\n  }\n\n\n  function submit(e) {\n    e.preventDefault();\n    let msgName = [];\n    let messageOcc = [];\n\n    const path = 'https://mhirjapi.azurewebsites.net/api/chart_one/' + data_chart1.top_value + '/' + data_chart1.aircraft_no + '/' + data_chart1.from_date + '/' + data_chart1.to_date;\n    //const path = 'http://40.82.160.131/api/chart_one/' + data_chart1.top_value + '/' + data_chart1.aircraft_no + '/' + data_chart1.from_date + '/' + data_chart1.to_date;\n\n    axios.post(path)\n      .then(res => {\n        console.log(res, \"response\");\n\n        for (const dataObj of JSON.parse(res.data)) {\n          msgName.push(dataObj.Equation_ID + \"\\n\" + dataObj.ATA + \"\\n\" + dataObj.LRU);\n          messageOcc.push(parseInt(dataObj.total_message));\n        }\n        setChartData1({\n          labels: msgName,\n          datasets: [\n            {\n              label: data_chart1.aircraft_no,\n              data: messageOcc,\n              backgroundColor: \"#d8e4f0\",\n              borderWidth: 2,\n              borderColor: \"black\"\n            }\n          ]\n        });\n      })\n      .catch(err => {\n        //console.log(err);\n      });\n    //console.log(msgName, messageOcc);\n  }\n  function handle(e) {\n    const newdata = { ...data_chart1 }\n    newdata[e.target.id] = e.target.value\n    setData_chart1(newdata)\n    //console.log(newdata)\n\n  }\n\n\n\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={12}>\n        <Grid item xs={12}>\n          <form className={classes.root1}>\n            <div><h1 style={{ color: \"#001C3E\", textAlign: \"center\" }}>MESSAGE OCCURENCE FOR AIRCRAFT</h1></div>\n            <div> <TextField onChange={(e) => handle(e)} id=\"aircraft_no\" value={data_chart1.aircraft_no} label=\"Aircraft MSN\" defaultValue=\" \" variant=\"outlined\" /></div>\n            <br></br>\n            <div> <TextField onChange={(e) => handle(e)} id=\"top_value\" value={data_chart1.top_value} label=\"Top Values\" defaultValue=\" \" variant=\"outlined\" /></div>\n            <br></br>\n            <div>  <TextField onChange={(e) => handle(e)} id=\"from_date\" value={data_chart1.from_date} label=\" SELECT FROM DATE &nbsp; &nbsp;\" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{ shrink: true, }} />\n              <TextField onChange={(e) => handle(e)} id=\"to_date\" value={data_chart1.to_date} label=\" SELECT TO DATE \" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{ shrink: true, }} /></div>\n            <br></br>\n            <div style={{ paddingBottom: \"20px\" }}><Button onClick={(e) => submit(e)} variant=\"contained\" style={{ backgroundColor: \"#001C3E\", color: \"WHITE\" }}>GENERATE  </Button>\n              <Button onClick={(e) => save(e)} variant=\"contained\" style={{ backgroundColor: \"#001C3E\", color: \"WHITE\", float: 'right', marginRight: \"1200px\" }}>SAVE</Button></div>\n          </form>\n          <Paper className={classes.paper}>\n            <HorizontalBar\n              id=\"chart1\"\n              data={chartData1}\n              options={{\n                title: {\n                  display: true,\n                  text: 'Message occurance in ' + data_chart1.aircraft_no,\n                  fontSize: 20\n                },\n                scales: {\n                  yAxes: [\n                    {\n                      ticks: {\n                        autoSkip: true,\n                        beginAtZero: false\n                      },\n\n                      gridLines: {\n                        display: true\n                      }\n                    }\n                  ],\n                  xAxes: [\n                    {\n                      ticks: {\n                        beginAtZero: true\n                      },\n                      scaleLabel: {\n                        display: true,\n                        labelString: 'Total Number of Messages',\n                        fontStyle: 'bold',\n                        fontColor: '#001C3E'\n                      },\n                      gridLines: {\n                        display: false\n                      }\n                    }\n                  ]\n                },\n                legend: {\n                  display: true,\n                  position: 'right'\n                }\n              }}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Chart2.js",["149"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport {HorizontalBar} from 'react-chartjs-2';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginLeft: '25px',\n    marginTop: '25px',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    width: theme.spacing(185),\n    height: theme.spacing(150),\n  },\n\n}));\n\nexport default function Chart2() {\n  const classes = useStyles();\n  const [chartData2, setChartData2] = useState({});\n  const [data_chart2, setData_chart2] = useState({\n    ata: \"\",\n    top_value: \"\",\n    from_date: \"\",\n    to_date: \"\"\n  });\n\n\n  function save(e) {\n    //save to png\n    const canvasSave = document.getElementById('chart2');\n    canvasSave.toBlob(function (blob) {\n      saveAs(blob, \"Chart2.png\")\n    })\n  }\n\n\n\n  function submit_chart2(e) {\n    e.preventDefault();\n    let aircraft_no = [];\n    let ataOcc = [];\n\n\n   const path = 'https://mhirjapi.azurewebsites.net/api/chart_two/' + data_chart2.top_value + '/' + data_chart2.ata + '/' + data_chart2.from_date + '/' + data_chart2.to_date;\n    //const path = 'http://40.82.160.131/api/chart_two/' + data_chart2.top_value + '/' + data_chart2.ata + '/' + data_chart2.from_date + '/' + data_chart2.to_date;\n\n\n    axios.post(path)\n      .then(res => {\n        //console.log(res,\"response\");\n        for (const dataObj of JSON.parse(res.data)) {\n          aircraft_no.push(dataObj.aircraft);\n          ataOcc.push(parseInt(dataObj.ataOcc));\n        }\n        setChartData2({\n          labels: aircraft_no,\n          datasets: [\n            {\n              label: data_chart2.ata,\n              data: ataOcc,\n              backgroundColor: \"#d8e4f0\",\n              borderWidth: 1,\n              borderColor: \"black\"\n            }\n          ]\n        });\n      })\n      .catch(err => {\n        //console.log(err);\n      });\n  }\n\n\n  function handle_chart2(e) {\n    const newdata = { ...data_chart2 }\n    newdata[e.target.id] = e.target.value\n    setData_chart2(newdata)\n    //console.log(newdata)\n\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n\n        <Grid item xs={12}>\n\n          <form className={classes.root1} noValidate autoComplete=\"off\">\n            <div><h1 style={{ color: \"#001C3E\", textAlign: \"center\" }}>TOP AIRCRAFT BY ATA</h1></div>\n            <div> <TextField onChange={(e) => handle_chart2(e)} id=\"ata\" value={data_chart2.ata} label=\"ATA\" defaultValue=\" \" variant=\"outlined\" /></div>\n            <br></br>\n            <div> <TextField onChange={(e) => handle_chart2(e)} id=\"top_value\" value={data_chart2.top_value} label=\"Top Values\" defaultValue=\" \" variant=\"outlined\" /></div>\n            <br></br>\n            <div>  <TextField onChange={(e) => handle_chart2(e)} id=\"from_date\" value={data_chart2.from_date} label=\" SELECT FROM DATE &nbsp; &nbsp;\" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{ shrink: true, }} />\n              <TextField onChange={(e) => handle_chart2(e)} id=\"to_date\" value={data_chart2.to_date} label=\" SELECT TO DATE \" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{ shrink: true, }} /></div>\n            <br></br>\n            <div style={{ paddingBottom: \"20px\" }}><Button onClick={(e) => submit_chart2(e)} variant=\"contained\" style={{ backgroundColor: \"#001C3E\", color: \"WHITE\" }}>GENERATE  </Button>\n              <Button onClick={(e) => save(e)} variant=\"contained\" style={{ backgroundColor: \"#001C3E\", color: \"WHITE\", float: 'right', marginRight: \"1200px\" }}>SAVE</Button></div>\n          </form>\n\n          <Paper className={classes.paper}>\n            <HorizontalBar\n              id=\"chart2\"\n              data={chartData2}\n              options={{\n                // indexAxis: \"y\",\n                title: {\n                  display: true,\n                  text: 'ATA ' + data_chart2.ata + ' occurence in each AC',\n                  fontSize: 20\n                },\n                scales: {\n                  yAxes: [\n                    {\n                      ticks: {\n                        autoSkip: false,\n                        // maxTicksLimit: 10,\n                        beginAtZero: true\n                      },\n                      gridLines: {\n                        display: true\n                      }\n\n                    }\n                  ],\n                  xAxes: [\n                    {\n                      ticks: {\n                        beginAtZero: true\n                      },\n                      scaleLabel: {\n                        display: true,\n                        labelString: 'ATA ' + data_chart2.ata + ' occurence in each AC',\n                        fontStyle: 'bold',\n                        fontColor: '#001C3E'\n\n                      },\n                      gridLines: {\n                        display: true\n                      }\n                    }\n                  ]\n                },\n                legend: {\n                  display: true,\n                  position: 'right'\n                }\n              }}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Chart3.js",["150","151"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { Line } from 'react-chartjs-2';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\nimport { DateConverter } from './DateConverter';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginLeft: '25px',\n    marginTop: '25px',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    width: theme.spacing(185),\n    height: theme.spacing(150),\n  },\n  formControl: {\n    margin: theme.spacing(0),\n    minWidth: 226,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n\n}));\n\nexport default function Chart3() {\n  const classes = useStyles();\n  const [chartData3, setChartData3] = useState({});\n  const [flightphase, setflightphase] = React.useState('');\n  const [data_chart3, setData_chart3] = useState({\n    aircraft_no: \"\",\n    equation_id: \"\",\n    from_date: \"\",\n    to_date: \"\"\n  });\n  \n\n\n  function save(e) {\n    //save to png\n    const canvasSave = document.getElementById('chart3');\n    canvasSave.toBlob(function (blob) {\n      saveAs(blob, \"Chart3.png\")\n    })\n  }\n\n  function submit_chart3(e) {\n    e.preventDefault();\n    let Dates = [];\n    let OccperDay = [];\n\n    const path = 'https://mhirjapi.azurewebsites.net/api/chart_three/' + data_chart3.aircraft_no + '/' + data_chart3.equation_id + '/' + flightphase + '/' + data_chart3.from_date + '/' + data_chart3.to_date;\n    //const path = 'http://40.82.160.131/api/chart_three/' + data_chart3.aircraft_no + '/' + data_chart3.equation_id + '/' + data_chart3.flight_phase + '/' + data_chart3.from_date + '/' + data_chart3.to_date;\n\n    console.log(path)\n    axios.post(path)\n      .then(res => {\n        //console.log(res,\"response\");\n        for (const dataObj of JSON.parse(res.data)) {\n          Dates.push(DateConverter(dataObj.Dates));\n          OccperDay.push(parseInt(dataObj.OccurencesPerDay));\n        }\n        setChartData3({\n          labels: Dates,\n          datasets: [\n            {\n              label: data_chart3.aircraft_no,\n              data: OccperDay,\n              backgroundColor: \"#d8e4f0\",\n              borderWidth: 1,\n              borderColor: \"black\"\n            }\n          ]\n        });\n      })\n      .catch(err => {\n        //console.log(err);\n      });\n  }\n  const handleflightphase = (event) => {\n    setflightphase(event.target.value)\n    \n  };\n  \n\n  function handle_chart3(e) {\n    \n    const newdata = { ...data_chart3 }\n    newdata[e.target.id] = e.target.value\n    setData_chart3(newdata)\n    //console.log(newdata)\n\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n\n        <Grid item xs={12}>\n\n          <form className={classes.root1} noValidate autoComplete=\"off\">\n            <div><h1 style={{ color: \"#001C3E\", textAlign: \"center\" }}>MESSAGE TREND BY AIRCRAFT</h1></div>\n            <div> <TextField onChange={(e) => handle_chart3(e)} id=\"aircraft_no\" value={data_chart3.aircraft_no} label=\"Aircraft MSN\" defaultValue=\" \" variant=\"outlined\" /></div>\n            <br></br>\n            <div> <TextField onChange={(e) => handle_chart3(e)} id=\"equation_id\" value={data_chart3.equation_id} label=\"Equation ID\" defaultValue=\" \" variant=\"outlined\" /></div>\n            <br></br>\n  \n            <div><FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">Current Messages</InputLabel>\n              <Select labelId=\"demo-simple-select-outlined-label\"  id=\"flight_phase\" value={flightphase} onChange={handleflightphase}  label=\"Current Messages\">\n                <MenuItem value={0}>Include</MenuItem>\n                <MenuItem value={1}>Exclude</MenuItem>\n              </Select>\n            </FormControl></div>\n            <br></br>\n            <div>  <TextField onChange={(e) => handle_chart3(e)} id=\"from_date\" value={data_chart3.from_date} label=\" SELECT FROM DATE &nbsp; &nbsp;\" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{ shrink: true, }} />\n              <TextField onChange={(e) => handle_chart3(e)} id=\"to_date\" value={data_chart3.to_date} label=\" SELECT TO DATE \" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{ shrink: true, }} /></div>\n            <br></br>\n            <div style={{ paddingBottom: \"20px\" }}><Button onClick={(e) => submit_chart3(e)} variant=\"contained\" style={{ backgroundColor: \"#001C3E\", color: \"WHITE\" }}>GENERATE  </Button>\n              <Button onClick={(e) => save(e)} variant=\"contained\" style={{ backgroundColor: \"#001C3E\", color: \"WHITE\", float: 'right', marginRight: \"1200px\" }}>SAVE</Button></div>\n          </form>\n\n          <Paper className={classes.paper}>\n            <Line\n              id=\"chart3\"\n              data={chartData3}\n              options={{\n                title: {\n                  display: true,\n                  text: 'Date Trend for ' + data_chart3.aircraft_no + ' and message ' + data_chart3.equation_id,\n                  fontSize: 20\n                },\n                scales: {\n                  yAxes: [\n                    {\n                      ticks: {\n                        autoSkip: false,\n                        beginAtZero: true\n                      },\n                      scaleLabel: {\n                        display: true,\n                        labelString: 'Occurence Per Day',\n                        fontStyle: 'bold',\n                        fontColor: '#001C3E'\n\n                      },\n                      gridLines: {\n                        display: true\n                      }\n\n                    }\n                  ],\n                  xAxes: [\n                    {\n                      ticks: {\n                        beginAtZero: true\n                      },\n                      scaleLabel: {\n                        display: true,\n                        labelString: 'Occurence Dates',\n                        fontStyle: 'bold',\n                        fontColor: '#001C3E'\n\n                      },\n                      gridLines: {\n                        display: true\n                      }\n                    }\n                  ]\n                },\n                legend: {\n                  display: false,\n                  position: 'right'\n                }\n              }}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Chart4.js",["152","153","154","155"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { Bar, HorizontalBar, Line } from 'react-chartjs-2';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\nimport { Avatar } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginLeft: '25px',\n    marginTop: '25px',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    width: theme.spacing(185),\n    height: theme.spacing(150),\n  },\n\n}));\n\nexport default function Chart5() {\n  const classes = useStyles();\n\n  const [chartData5, setChartData5] = useState({});\n\n\n  const [data_chart5, setData_chart5] = useState({\n    aircraft_no:\"\",\n    equation_id:\"\",\n    flight_phase:\"\",\n    from_date:\"\",\n    to_date:\"\"\n  });\n\n \n  function save(e) {\n    //save to png\n    const canvasSave = document.getElementById('chart5');\n    canvasSave.toBlob(function (blob) {\n        saveAs(blob, \"Chart5.png\")\n    })\n}\n  \n\n\n  function submit_chart5(e){\n    e.preventDefault();\n    let intermittence = [];\n    let flight_leg = [];\n    \n    \n    const path='http://localhost:8000/chart_five/' +data_chart5.aircraft_no+ '/' +data_chart5.equation_id+ '/'+data_chart5.flight_phase+ '/' +data_chart5.from_date+ '/' +data_chart5.to_date;\n    axios.post(path)\n      .then(res => {\n        //console.log(res,\"response\");\n        for (const dataObj of JSON.parse(res.data)) {\n          intermittence.push(dataObj.OccurencesOfIntermittent);\n          flight_leg.push(parseInt(dataObj.Flight_Leg_No));\n        }\n        setChartData5({\n          labels: flight_leg,\n          datasets: [\n            {\n              //label: data_chart5.aircraft_no,\n              data: intermittence,\n              backgroundColor: \"#d8e4f0\",\n              borderWidth: 1,\n              borderColor: \"black\"\n            }\n          ]\n        });\n      })\n      .catch(err => {\n        //console.log(err);\n      });\n  }\n\n\n  function handle_chart5(e){\n    const newdata={...data_chart5}\n    newdata[e.target.id] = e.target.value\n    setData_chart5(newdata)\n    //console.log(newdata)\n\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n\n        <Grid item xs={12}>\n\n          <form className={classes.root1} noValidate autoComplete=\"off\">\n          <div><h1 style={{color:\"#001C3E\"}}>TOP ATA IN REPORTS</h1></div>   \n            <div> <TextField onChange= {(e)=>handle_chart5(e)} id=\"aircraft_no\" value={data_chart5.aircraft_no} label=\"Aircraft No\" defaultValue=\" \" variant=\"outlined\" /></div>\n            <br></br>\n            <div> <TextField onChange= {(e)=>handle_chart5(e)} id=\"equation_id\" value={data_chart5.equation_id} label=\"Equation ID\" defaultValue=\" \" variant=\"outlined\" /></div>\n            <br></br>\n            <div> <TextField onChange= {(e)=>handle_chart5(e)} id=\"flight_phase\" value={data_chart5.flight_phase} label=\"Flight Phase Enabled\" defaultValue=\" \" variant=\"outlined\" /></div>\n            <br></br>\n            <div>  <TextField onChange= {(e)=>handle_chart5(e)} id=\"from_date\" value={data_chart5.from_date} label=\" SELECT FROM DATE &nbsp; &nbsp;\" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{shrink: true, }} />\n              <TextField onChange= {(e)=>handle_chart5(e)} id=\"to_date\" value={data_chart5.to_date} label=\" SELECT TO DATE \" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{ shrink: true,  }} /></div>\n            <br></br>\n            <div  style={{ paddingBottom: \"20px\" }}><Button onClick={(e) => submit_chart5(e)} variant=\"contained\" style={{backgroundColor:\"#001C3E\", color:\"WHITE\"}}>GENERATE  </Button>\n            <Button onClick={(e) => save(e)}  variant=\"contained\"style={{backgroundColor:\"#001C3E\", color:\"WHITE\",float:'right', marginRight:\"1200px\"}}>SAVE</Button></div>\n          </form>\n\n          <Paper className={classes.paper}>\n            <Line\n            id=\"chart5\"\n            data={chartData5}\n            options={{\n              // indexAxis: \"y\",\n              title: {\n                display: true,\n                text: 'Intermittence Trend for ' +data_chart5.aircraft_no+ ' and message '+data_chart5.equation_id,\n                fontSize: 20\n              },\n              scales: {\n                yAxes: [\n                  {\n                    ticks: {\n                      autoSkip: false,\n                      // maxTicksLimit: 10,\n                      beginAtZero: true\n                    },\n                    gridLines: {\n                      display: true\n                    }\n                    \n                  }\n                ],\n                xAxes: [\n                  {\n                    ticks: {\n                      beginAtZero: true\n                    },\n                    gridLines: {\n                      display: true\n                    }\n                  }\n                ]\n              },\n              legend: {\n                display: false,\n                position: 'right'\n              }\n            }}\n          />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Chart5.js",["156","157"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { Line } from 'react-chartjs-2';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginLeft: '25px',\n    marginTop: '25px',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    width: theme.spacing(185),\n    height: theme.spacing(150),\n  },\n  formControl: {\n    margin: theme.spacing(0),\n    minWidth: 226,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function Chart5() {\n  const classes = useStyles();\n  const [chartData5, setChartData5] = useState({});\n  const [flightphase, setflightphase] = React.useState('');\n  const [data_chart5, setData_chart5] = useState({\n    aircraft_no: \"\",\n    equation_id: \"\",\n    flight_phase: \"\",\n    from_date: \"\",\n    to_date: \"\"\n  });\n\n\n  function save(e) {\n    //save to png\n    const canvasSave = document.getElementById('chart5');\n    canvasSave.toBlob(function (blob) {\n      saveAs(blob, \"Chart5.png\")\n    })\n  }\n\n\n\n  function submit_chart5(e) {\n    e.preventDefault();\n    let intermittence = [];\n    let flight_leg = [];\n    \n    \n    const path='https://mhirjapi.azurewebsites.net/api/chart_five/' +data_chart5.aircraft_no+ '/' +data_chart5.equation_id+ '/' +flightphase+ '/' +data_chart5.from_date+ '/' +data_chart5.to_date;\n    axios.post(path)\n      .then(res => {\n        //console.log(res,\"response\");\n        for (const dataObj of JSON.parse(res.data)) {\n          intermittence.push(dataObj.OccurencesOfIntermittent);\n          flight_leg.push(parseInt(dataObj.Flight_Leg_No));\n        }\n        setChartData5({\n          labels: flight_leg,\n          datasets: [\n            {\n              data: intermittence,\n              backgroundColor: \"#d8e4f0\",\n              borderWidth: 1,\n              borderColor: \"black\"\n            }\n          ]\n        });\n      })\n      .catch(err => {\n        //console.log(err);\n      });\n  }\n  // const handleflightphase = (event) => {\n  //   setflightphase(event.target.value)\n    \n  // };\n\n  function handle_chart5(e) {\n    const newdata = { ...data_chart5 }\n    newdata[e.target.id] = e.target.value\n    setData_chart5(newdata)\n    //console.log(newdata)\n\n  }\n  const handleflightphase = (event) => {\n    setflightphase(event.target.value)\n    \n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n\n        <Grid item xs={12}>\n\n          <form className={classes.root1} noValidate autoComplete=\"off\">\n          <div><h1 style={{color:\"#001C3E\", textAlign: \"center\"}}>INTERMITTENCE FLIGHT LEG TREND FOR AIRCRAFT</h1></div>   \n            <div> <TextField onChange= {(e)=>handle_chart5(e)} id=\"aircraft_no\" value={data_chart5.aircraft_no} label=\"Aircraft No\" defaultValue=\" \" variant=\"outlined\" /></div>\n            <br></br>\n            <div> <TextField onChange={(e) => handle_chart5(e)} id=\"equation_id\" value={data_chart5.equation_id} label=\"Equation ID\" defaultValue=\" \" variant=\"outlined\" /></div>\n            <br></br>\n            <div><FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">Current Messages</InputLabel>\n              <Select labelId=\"demo-simple-select-outlined-label\"  id=\"flight_phase\" value={flightphase} onChange={handleflightphase}  label=\"Current Messages\">\n                <MenuItem value={0}>Include</MenuItem>\n                <MenuItem value={1}>Exclude</MenuItem>\n              </Select>\n            </FormControl></div>\n            <br></br>\n            <div>  <TextField onChange={(e) => handle_chart5(e)} id=\"from_date\" value={data_chart5.from_date} label=\" SELECT FROM DATE &nbsp; &nbsp;\" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{ shrink: true, }} />\n              <TextField onChange={(e) => handle_chart5(e)} id=\"to_date\" value={data_chart5.to_date} label=\" SELECT TO DATE \" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{ shrink: true, }} /></div>\n            <br></br>\n            <div style={{ paddingBottom: \"20px\" }}><Button onClick={(e) => submit_chart5(e)} variant=\"contained\" style={{ backgroundColor: \"#001C3E\", color: \"WHITE\" }}>GENERATE  </Button>\n              <Button onClick={(e) => save(e)} variant=\"contained\" style={{ backgroundColor: \"#001C3E\", color: \"WHITE\", float: 'right', marginRight: \"1200px\" }}>SAVE</Button></div>\n          </form>\n\n          <Paper className={classes.paper}>\n            <Line\n              id=\"chart5\"\n              data={chartData5}\n              options={{\n                title: {\n                  display: true,\n                  text: 'Intermittence Trend for ' + data_chart5.aircraft_no + ' and message ' + data_chart5.equation_id,\n                  fontSize: 20\n                },\n                scales: {\n                  yAxes: [\n                    {\n                      ticks: {\n                        autoSkip: false,\n                        beginAtZero: true\n                      },\n                      scaleLabel: {\n                        display: true,\n                        labelString: 'Intermittence',\n                        fontStyle: 'bold',\n                        fontColor: '#001C3E'\n\n                      },\n                      gridLines: {\n                        display: true\n                      }\n\n                    }\n                  ],\n                  xAxes: [\n                    {\n                      ticks: {\n                        beginAtZero: true\n                      },\n                      scaleLabel: {\n                        display: true,\n                        labelString: 'Flight Leg',\n                        fontStyle: 'bold',\n                        fontColor: '#001C3E'\n\n\n                      },\n                      gridLines: {\n                        display: true\n                      }\n                    }\n                  ]\n                },\n                legend: {\n                  display: false,\n                  position: 'right'\n                }\n              }}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Scatter1.js",["158","159","160","161","162"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { Scatter } from 'react-chartjs-2';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginLeft: '25px',\n    marginTop: '25px',\n  },\n\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    width: theme.spacing(185),\n    height: theme.spacing(120),\n  },\n\n}));\n\n\nexport default function Scatter1() {\n  const classes = useStyles();\n  const ChartJsImage = require('chartjs-to-image');\n  const [chartData1, setChartData1] = useState({});\n  const [chartData2, setChartData2] = useState({});\n  let aircraftno_scatter = [];\n  let mdcMessage = [];\n\n  function save(e) {\n    //save to png\n    const canvasSave = document.getElementById('chart1');\n    canvasSave.toBlob(function (blob) {\n      saveAs(blob, \"Chart1.png\")\n    })\n  }\n\n  const [data_chart1, setData_chart1] = useState({\n    from_date: \"\",\n    to_date: \"\"\n  });\n\n  function submit(e) {\n    e.preventDefault();\n\n    const path = 'https://mhirjapi.azurewebsites.net/api/scatter_chart_MDC_PM/' + data_chart1.from_date + '/' + data_chart1.to_date;\n    //const path = 'http://40.82.160.131/api/scatter_chart_MDC_PM/' + data_chart1.select_date;\n\n\n    //console.log(path);\n    axios.post(path)\n      .then(res => {\n        for (const dataObj of JSON.parse(res.data)) {\n          let mdc = parseInt(dataObj.MDC_Message_Cnt)\n          let pm = parseInt(dataObj.MX_actions)\n          aircraftno_scatter.push(dataObj.aircraftno)\n          mdcMessage.push({ \"x\": mdc, \"y\": pm })\n\n        }\n        console.log(mdcMessage);\n        setChartData1({\n          labels: aircraftno_scatter,\n          datasets: [\n            {\n              label: \"Fleet Status\",\n              data: mdcMessage,\n              backgroundColor: \"#d8e4f0\",\n              borderWidth: 2,\n              borderColor: \"black\",\n              pointRadius: 5\n\n            }\n          ]\n        });\n      })\n      .catch(err => {\n        //console.log(err);\n      });\n\n  }\n  function handle(e) {\n    const newdata = { ...data_chart1 }\n    newdata[e.target.id] = e.target.value\n    setData_chart1(newdata)\n    //console.log(newdata)\n\n  }\n  return (\n\n    <div className={classes.root}>\n      <Grid container spacing={12}>\n        <Grid item xs={12}>\n          <form className={classes.root1} noValidate autoComplete=\"off\">\n\n            <div><h2 style={{ color: \"#001C3E\", textAlign: \"center\" }}>FLEET STATUS</h2></div>\n            <div>  <TextField onChange={(e) => handle(e)} id=\"from_date\" value={data_chart1.from_date} label=\" SELECT FROM DATE &nbsp; &nbsp;\" type=\"date\" defaultValue=\" \" className={classes.textField} InputLabelProps={{ shrink: true, }} />\n              <TextField onChange={(e) => handle(e)} id=\"to_date\" value={data_chart1.to_date} label=\" SELECT TO DATE \" type=\"date\" defaultValue=\" \" className={classes.textField} InputLabelProps={{ shrink: true, }} /></div>\n            <br></br>\n            <div style={{ paddingBottom: \"20px\" }}><Button id=\"Button\" onClick={(e) => submit(e)} variant=\"contained\" style={{ backgroundColor: \"#001C3E\", color: \"WHITE\" }}>GENERATE  </Button>\n              <Button onClick={(e) => save(e)} variant=\"contained\" style={{ backgroundColor: \"#001C3E\", color: \"WHITE\", float: 'right', marginRight: \"1200px\" }}>SAVE</Button></div>\n          </form>\n\n          <Paper className={classes.paper}>\n            <Scatter\n              id=\"chart1\"\n              data={chartData1}\n              options={{\n                legend: { display: false },\n                tooltips: {\n\n                  displayColors: false,\n                  backgroundColor: 'black',\n                  titleFontColor: 'rgb(255,255,255)',\n                  bodyFontColor: 'rgb(255,255,255)',\n                  footerFontColor: 'rgb(255,255,255)',\n                  footerFontStyle: 'normal',\n\n                  callbacks: {\n                    title: function (item, everything) {\n                      return;\n                    },\n                    label: function (item, everything) {\n                      console.log(item, everything);\n                      let ind = item.index;\n                      let aircraft_name = everything.labels[ind];\n                      return \"Aircraft: \" + aircraft_name;\n                    },\n\n                    footer: function (item, everything) {\n                      console.log(item, everything);\n                      let xvalue = item[0].xLabel;\n                      let yvalue = item[0].yLabel;\n                      return \"x =\" + xvalue +','+\" y = \" + yvalue;\n\n                    }\n                  }\n                },\n                scales: {\n                  xAxes: [{\n                    type: 'linear',\n                    position: 'bottom',\n                    scaleLabel: {\n                      display: true,\n                      labelString: '# of MDC Messages- Last 7 days',\n                      fontStyle: 'bold',\n                      fontColor: '#001C3E'\n\n                    },\n                  }],\n                  yAxes: [{\n                    display: true,\n                    scaleLabel: {\n                      display: true,\n                      labelString: '# of log-book entries',\n                      fontStyle: 'bold',\n                      fontColor: '#001C3E'\n                    }\n                  }],\n                  title: { display: true, text: 'Scatter Plot', fontSize: 20 },\n\n                }\n              }}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Stacked.js",["163","164","165","166","167","168","169","170"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { HorizontalBar } from 'react-chartjs-2';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginLeft: '25px',\n    marginTop: '25px',\n  },\n\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    width: theme.spacing(185),\n    height: theme.spacing(120),\n  },\n\n}));\n\n\nexport default function Stacked() {\n  const classes = useStyles();\n  const ChartJsImage = require('chartjs-to-image');\n  const [chartData1, setChartData1] = useState({});\n\n  function save(e) {\n    //save to png\n    const canvasSave = document.getElementById('chart1');\n    canvasSave.toBlob(function (blob) {\n      saveAs(blob, \"StackedChart.png\")\n    })\n  }\n\n  const [data_chart1, setData_chart1] = useState({\n    from_date: \"\",\n    to_date: \"\",\n    top_value: \"\"\n  });\n\n  function submit(e) {\n    e.preventDefault();\n    let aircraftno = [];\n    let ata_main = [];\n    let msg = [];\n\n\n    const path = 'https://mhirjapi.azurewebsites.net/api/Landing_Chart_B/' + data_chart1.top_value + '/' + data_chart1.from_date + '/' + data_chart1.to_date;\n    axios.post(path)\n      .then(res => {\n        //console.log(res,\"response\");\n\n        let data = JSON.parse(res.data);\n        let aircraftNos = Object.keys(data);\n        let dataMetaData = {};\n        aircraftNos.map(no => {\n          let airCraftObj = data[no];\n          for (let x in airCraftObj) {\n            if (dataMetaData[x]) dataMetaData[x].push(airCraftObj[x]);\n            else dataMetaData[x] = [airCraftObj[x]];\n          }\n        \n      \n      })\n      const getUniqueBackgroundColor = (code) => {\n        switch(code){\n          case '21':\n            return \"#ef5350\";\n          case '22':\n            return \"#ec407a\";\n          case '23':\n            return \"#ab47bc\";\n          case '24':\n            return \"#7e57c2\"\n          case '26':\n            return \"#5c6bc0\";\n          case '27':\n            return \"#42a5f5\";\n          case '28':\n            return \"#29b6f6\";\n          case '30':\n            return \"#26c6da\";\n          case '31':\n            return \"#26a69a\";\n          case '32':\n            return \"#66bb6a\";\n          case '33':\n            return \"#9ccc65\";\n          case '34':\n            return \"#d4e157\";\n          case '36':\n              return \"#ffee58\";\n          case '38':\n              return \"#ffca28\";\n          case '45':\n            return \"#ffa726\";\n          case '49':\n            return \"#8d6e63\";\n          case '71':\n            return \"#bdbdbd\";\n          case '77':\n            return \"#9e9d24\";\n          case '78':\n            return \"#00b8d4\";\n        }\n      }\n\n      const intiDataSet = (dataMetaData) => {\n        let codes = Object.keys(dataMetaData);\n        let finalDataset = [];\n        codes.map(code => {\n          let dataObj = {};\n          dataObj.label = code;\n          dataObj.data = dataMetaData[code];\n          dataObj.backgroundColor = getUniqueBackgroundColor(code);\n          finalDataset.push(dataObj);\n          dataObj.borderWidth= 0.5;\n          dataObj.borderColor=\"black\";\n        });\n        return finalDataset;\n      }\n     // console.log(\"aircraftNos=\",aircraftNos);\n      setChartData1({\n      labels: aircraftNos,\n      datasets: intiDataSet(dataMetaData)\n      \n    });\n    })\n    .catch(err => {\n      //console.log(err);\n    });\n  }\n  function handle(e) {\n    const newdata = { ...data_chart1 }\n    newdata[e.target.id] = e.target.value\n    setData_chart1(newdata)\n    //console.log(newdata)\n\n  }\n  return (\n\n    <div className={classes.root}>\n      <Grid container spacing={12}>\n        <Grid item xs={12}>\n          <form className={classes.root1} noValidate autoComplete=\"off\">\n            <div><h1 style={{ color: \"#001C3E\", textAlign: \"center\" }}>Stacked Chart for Magnitude of Messages in data</h1></div>\n            <div> <TextField onChange={(e) => handle(e)} id=\"top_value\" value={data_chart1.top_value} label=\"Top Values\" defaultValue=\" \" variant=\"outlined\" /></div>\n            <br></br>\n            <div>  <TextField onChange={(e) => handle(e)} id=\"from_date\" value={data_chart1.from_date} label=\" SELECT FROM DATE &nbsp; &nbsp;\" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{ shrink: true, }} />\n              <TextField onChange={(e) => handle(e)} id=\"to_date\" value={data_chart1.to_date} label=\" SELECT TO DATE \" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{ shrink: true, }} /></div>\n            <br></br>\n            <div style={{ paddingBottom: \"20px\" }}><Button onClick={(e) => submit(e)} variant=\"contained\" style={{ backgroundColor: \"#001C3E\", color: \"WHITE\" }}>GENERATE  </Button>\n              <Button onClick={(e) => save(e)} variant=\"contained\" style={{ backgroundColor: \"#001C3E\", color: \"WHITE\", float: 'right', marginRight: \"1200px\" }}>SAVE</Button></div>\n          </form>\n          <Paper className={classes.paper}>\n            <HorizontalBar\n              id=\"chart1\"\n              data={chartData1}\n              options={{\n                title: {\n                  display: true,\n                  text: 'Magnitute of messages in data',\n                  fontSize: 20\n                },\n                legend: {\n                  display: true,\n                  position: 'right'\n                },\n                scales: {\n                  xAxes: [{\n                    stacked: true\n                  }],\n                  yAxes: [{\n                    scaleLabel: {\n                      display: true,\n                      labelString: 'Aircraft Serial Number',\n                      fontStyle: 'bold',\n                      fontColor: '#001C3E'\n                    },\n                    stacked: true\n                  }]\n                }\n              }}\n            /></Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Correlation/Correlation.js",[],"/Users/navneetbhatti/Desktop/FrontEnd/src/Components/MdcMessages/GenerateReport/Analysis.js",[],"/Users/navneetbhatti/Desktop/FrontEnd/src/Components/MdcMessages/Reports/Report.js",[],"/Users/navneetbhatti/Desktop/FrontEnd/src/Components/MdcMessages/Reports/FlagReport/FlagReport.js",["171"],"import React,{useState} from 'react';\nimport MUIDataTable from \"mui-datatables\";\nimport {MuiThemeProvider, createMuiTheme} from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n//Date Imports\nimport {DateConverter} from '../../../Helper/Helper';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    alignItems:\"center\",\n    maxWidth: '92vw',\n    margin:  '20px',\n  },\n}));\n\nconst FlagReport = (props) => {\n\n  const columns = [\n    {\n      name: \"MSN\",\n      label: \"MSN\",\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n    },\n    {\n      name: 'ATA', \n      label: 'ATA',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n    },\n    {\n      name: 'code', \n      label: 'B1-Equation',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap', minWidth: \"90px\"}})\n      }\n    },\n    {\n      name: 'LRU', \n      label: 'LRU',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n    },\n    {\n      name: 'message', \n      label: 'Message',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n    },\n    {\n      name: 'type', \n      label: 'Type',\n      options: {\n       filter: false,\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n    },\n    {\n      name: 'FDE', \n      label: 'Potential FDE',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n    },\n    {\n      name: 'dateFrom', \n      label: 'Date From',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n    },\n    {\n      name: 'dateTo', \n      label: 'Date To',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n     },\n     {\n      name: 'action', \n      label: 'SKW action WIP',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap',minWidth: \"120px\"}})\n      }\n     },\n     {\n      name: 'input', \n      label: 'Input',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n     },\n     {\n      name: 'iseRecAct', \n      label: 'Rec Act',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n     },\n    ];\n\n    let data = [];\n      props.data?.map((item => {\n        data.push(\n          {\n            MSN: item[\"AC SN\"], \n            ATA: item[\"ATA\"], \n            code: item[\"B1-Equation\"], \n            LRU: item[\"LRU\"],  \n            message: item[\"Message\"],  \n            type: item[\"Type\"],  \n            FDE: item[\"Potential FDE\"],  \n            dateFrom: DateConverter(item[\"Date From\"]),   \n            dateTo: DateConverter(item[\"Date To\"]),   \n            action: item[\"SKW WIP\"],  \n            input: item[\"ISE Input\"],  \n            iseRecAct: item[\"ISE Rec Act\"],  \n          }\n        );\n        return data;\n      }\n      ));\n\n    const options = {\n      filter: true,\n      filterType: 'multiselect',\n      responsive: \"standard\",\n      fixedHeader: true,\n      fixedSelectColumn: true,\n      downloadOptions: {\n        filename: 'Flag Report from ' + props.flagReportConditions.fromDate + ' to ' + props.flagReportConditions.toDate + '.csv',\n        separator: ',',\n      },\n      draggableColumns: {\n        enabled: false,\n        transitionTime: 300,\n      },\n      textLabels: {\n        body: {\n            noMatch: props.loading ? 'Please wait, loading data ...' : \"Sorry, there is no matching data to display\"\n        },\n    },\n      elevation: 4,\n      rowsPerPage: 7,\n      rowsPerPageOptions: [7,20,50],\n      selectToolbarPlacement:\"none\",\n      tableBodyHeight: props.loading === true || data.length === 0 ? '160px' : `${100+data.length*60}px`\n    };\n\n    const theme = createMuiTheme({\n      palette: {type: 'light'},\n      typography: {useNextVariants: true},\n  });\n  \nconst classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={0}>\n        <Grid item xs={12}>\n            <MuiThemeProvider theme={theme}>\n              <MUIDataTable\n                title={\"Flag Report\"}\n                data={data}\n                columns={columns}\n                options={options}\n              />\n            </MuiThemeProvider> \n        </Grid> \n      </Grid> \n    </div>\n  );\n}\nexport default FlagReport;\n\n","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/MdcMessages/Reports/Rawdata/RawMdcMessages.js",["172","173","174"],"import React,{useEffect, useState} from 'react';\nimport RawDataTable from './RawDataTable';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport DatePicker from '../../GenerateReport/DatePicker';\nimport {AirlineOperatorSelector,ATAMainSelector,MessagesSelector,EqIDSelector} from '../../GenerateReport/Selectors';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\nroot: {\n  flexGrow: 1,\n},\n  form:{\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n  },\n},\npaper: {\n  margin: '50px auto 23px 20px',\n  width: '92vw',\n},\ncontainer: {\n  padding: '10px 40px',\n},\nGrid:{\n  padding:'20px 5px 20px 30px',\n  margin: 'auto',\n},\ncard:{\n  backgroundColor: \"#C5D3E0\",\n  textAlign: 'center',\n  justify: 'center',\n  padding: '5px',\n},\nformLabel:{\n  fontWeight: 'bold',\n  color: 'black',\n  marginBottom: '20px',\n},\n  button:{\n    margin:'50px 30px',\n    padding: '10px',\n    backgroundColor:\"#C5D3E0\",\n  },\n  EqSelector:{\n    marginTop:'9px',\n    marginRight:'0px',\n    width:'100px',\n  },\n  ATASelector:{\n    // marginTop:'9px',\n  },\n  h3:{\n    marginLeft: '5px',\n    fontSize:'20px',\n  },\n}));\n\nconst RawMdcMessages = () => {\n  const [loading, setLoading] = useState(true);\n  const [RDValue,setRDValue] = useState(0);\n  const classes = useStyles();\n\n  // ----- States and handle Functions for Date  ----- \n  const [dateFrom, setDateFrom] = useState();\n  const [dateTo, setDateTo] = useState();\n\n  const handleDateFrom = (date) => {\n    setDateFrom(date);\n  };\n\n  const handleDateTo = (date) => {\n    setDateTo(date);\n  };\n// ----- States and handle Functions for Selects  ----- \nconst [airline, setAilineType] = useState();\nconst [ATAMain, setATAMain] = React.useState('');\nconst [messagesChoice, setIncludeMessages] = React.useState('');\nconst [EqID, setEqID] = React.useState('');\nconst [rawData, setRawData] = React.useState('');\nconst [flag,setFlag] = useState(false);\n\nconst handleAirlineChange = (Airline) => {\n  setAilineType(Airline);\n};\n\nconst handleATAChange = (ATA) => {\n  setATAMain(ATA);\n};\n\nconst handleMessagesChange = (messages) => {\n  setIncludeMessages(messages);\n};\n\nconst handleEqIDChange = (eqIDList) => {\n  setEqID(eqIDList);\n};\n\n// ----- States and handle Functions for Generate Report  ----- \nconst [rawDataConditions, setRawDataConditions] = React.useState(\n  {\n    operator: '',\n    ata: '',\n    eqID: '',\n    messages: '',\n    fromDate: '',\n    toDate: '',\n  }\n );\n\nconst handleGenerateReport = (event) => {\n  setRawDataConditions(\n    {\n      operator: airline,\n      ata: ATAMain,\n      eqID: EqID,\n      messages: messagesChoice,\n      fromDate: dateFrom,\n      toDate: dateTo,\n    },\n  );\n  setRawData([]);\n  setRDValue(1);\n  setLoading(true);\n  }\n\nuseEffect(() => {\n  let flag = false;\n Object.values(rawDataConditions).map(item => {\n   if (item === \"\" || item === \"('')\"){\n     flag = true;\n     setLoading(false);\n   }\n });\n\n if (flag === false) {  \n    const path = 'https://mhirjapi.azurewebsites.net/api/MDCRawData/' + rawDataConditions.ata + '/' + rawDataConditions.eqID + '/' + rawDataConditions.operator + \n    '/' + rawDataConditions.messages + '/' + rawDataConditions.fromDate + '/' + rawDataConditions.toDate;\n\n      axios.post(path).then(function (res) {\n        var data = JSON.parse(res.data);\n          setRawData(data);\n          setLoading(false);\n      }).catch(function (err){\n            console.log(err);\n            setLoading(false);\n          })\n      }\n  },[rawDataConditions]);\n\n  return (\n    <div className={classes.root}>   \n     <form className={classes.form}>\n      <Paper className={classes.paper}>\n        <div className ={classes.card}>\n          <h2>RAW DATA FILTERS</h2>\n        </div>\n         <Grid className={classes.Grid} container spacing={0}> \n            <Grid item xs={2}>\n            <AirlineOperatorSelector\n                handleAirlineChange = {handleAirlineChange}                \n              />     \n              <MessagesSelector \n                handleMessagesChange = {handleMessagesChange}\n              />\n            </Grid>\n            <Grid className={classes.ATASelector} item xs={6}>\n            <ATAMainSelector \n                handleATAChange = {handleATAChange}\n              /> \n              <EqIDSelector \n                handleEqIDChange = {handleEqIDChange}\n              />   \n            </Grid>\n            <Grid item xs={2}>\n            <DatePicker \n              label = \"From\"\n              handleDateFrom = {handleDateFrom}\n            />   \n            <DatePicker \n              label = \"To\"\n              handleDateTo = {handleDateTo}\n            /> \n            </Grid>\n            <Grid item xs={2}>\n              <Button \n                variant=\"contained\" \n                onClick = {()=>handleGenerateReport()}\n                className={classes.button}>\n                  Filter Raw Data\n              </Button>                 \n            </Grid>\n          </Grid>\n     </Paper>\n     </form>\n     {rawData !== \"\" && rawData !== \"undefined\" && RDValue === 1 &&\n        <>\n          <RawDataTable\n            data = {rawData}\n            rawDataConditions = {rawDataConditions}\n            loading = {loading}\n          />\n      </>\n     }\n    </div> \n  );\n};\n\nexport default RawMdcMessages;","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Correlation/PMTable.js",["175"],"import React, {useState,useEffect} from 'react';\nimport MUIDataTable from \"mui-datatables\";\nimport {MuiThemeProvider, createMuiTheme} from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport DatePicker from '../MdcMessages/GenerateReport/DatePicker';\nimport {ATAMainSelector,EqIDSelector} from '../MdcMessages/GenerateReport/Selectors';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport CorrelationSubTable from './CorrelationSubTable';\n//Date Imports\nimport {DateConverter} from '../Helper/Helper';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n    form:{\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    margin: '20px auto 23px 20px',\n    width: '92vw',\n  },\n  container: {\n    padding: '20px 40px',\n  },\n  button:{\n    height: '50px',\n    width:'100%',\n    backgroundColor:\"#C5D3E0\",\n  },\n  Grid:{\n    paddingLeft:'30px',\n    margin: 'auto',\n  },\n  card:{\n    backgroundColor: \"#C5D3E0\",\n    textAlign: 'center',\n    justify: 'center',\n    padding: '5px',\n  },\n  formLabel:{\n    fontWeight: 'bold',\n    color: 'black',\n    marginBottom: '20px',\n  },\n  TableGrid:{\n    paddingLeft:'11px',\n    margin: '0px',\n    width:'94vw',\n  }\n}));\n\nconst PMTable = (props) => {\n  const classes = useStyles();\n  const [dateFrom, setDateFrom] = useState();\n  const [dateTo, setDateTo] = useState();\n  const [ATAMain, setATAMain] = useState();\n  const [EqID, setEqID] = useState('');\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [PMValue,setPMValue] = useState(0);\n\n  const handleDateFrom = (date) => {\n    setDateFrom(date);\n  };\n\n  const handleDateTo = (date) => {\n    setDateTo(date);\n  };\n  const handleATAChange = (ATA) => {\n    setATAMain(ATA);\n  };\n  const handleEqIDChange = (eqIDList) => {\n    setEqID(eqIDList);\n  };\n\n  const [PMConditions,setPMConditions] = useState('');\n  const handleGeneratePMTable = ()=> {\n    setPMConditions(\n    {         \n      dateFrom: dateFrom,\n      dateTo: dateTo,\n      EqID: EqID,\n      ATAMain: ATAMain,\n    },\n    )\n  setData([]);\n  setPMValue(1);\n  setLoading(true);\n}\n\n  useEffect(() => {\n     let flag = false;\n    Object.values(PMConditions).map(item => {\n      if (item === \"\" || item === \"('')\"){\n        flag = true;\n        setLoading(false);\n      }\n    });\n    if (flag === false) {      \n        const path = 'https://mhirjapi.azurewebsites.net/api/corelation/' + PMConditions.dateFrom + '/' + PMConditions.dateTo + '/' + PMConditions.EqID + '/' + PMConditions.ATAMain;\n          axios.post(path).then(function (res) {\n            var data = JSON.parse(res.data);\n            setData(data);\n            setLoading(false);\n          }).catch(function (err){\n            console.log(err);\n            setLoading(false);\n          })\n      }\n  },[PMConditions]);\n\nconst columns = [\n  {\n    name: \"p_id\",\n    label: \"p_id\",\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n    }\n  },\n  {\n    name: 'operator', \n    label: 'Operator',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n    }\n  },\n  {\n    name: 'model', \n    label: 'Model',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({style: {whiteSpace:'nowrap', minWidth: \"90px\"}})\n    }\n  },\n  {\n    name: 'type', \n    label: 'Type',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n    }\n  },\n  {\n    name: 'serialNo', \n    label: 'Serial_No',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n    }\n  },\n  {\n    name: 'date', \n    label: 'Date',\n    options: {\n      filter: false,\n      sort: true,\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n    }\n  },\n  {\n    name: 'failureFlag', \n    label: 'Failure Flag',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n    }\n  },\n  {\n    name: 'maintTrans', \n    label: 'MaintTrans',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n    }\n  },\n  {\n    name: 'maintCanc', \n    label: 'Maintenance Cancellations',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n    }\n    },\n    {\n    name: 'maintDel', \n    label: 'Maintenance Delays',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({style: {whiteSpace:'nowrap',minWidth: \"120px\"}})\n    }\n    },\n    {\n    name: 'inspection', \n    label: 'Inspection',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n    }\n    },\n    {\n    name: 'campType', \n    label: 'Camp Type',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n    }\n    },\n    {\n    name: 'MRB', \n    label: 'MRB',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({style: {whiteSpace:'nowrap',minWidth: \"100px\"}})\n    }\n    },\n    {\n    name: 'discrepancy', \n    label: 'Discrepancy',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n    }\n    },\n    {\n    name: 'corActions', \n    label: 'Corrective Action',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n    }\n    },\n    {\n    name: 'totalHours', \n    label: 'AC Total Hours',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n    }\n    },\n    {\n    name: 'totalCycles', \n    label: 'AC Total Cycles',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n    }\n    },\n    {\n    name: 'squawkSource', \n    label: 'Squawk Source',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n    }\n    },\n    {\n    name: 'ATA', \n    label: 'ATA',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n    }\n    },\n    {\n    name: 'station', \n    label: 'Station',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n    }\n    },\n    {\n    name: 'ATA_SUB', \n    label: 'ATA SUB',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n    }\n    },\n    {\n    name: 'ATA_Main', \n    label: 'ATA Main',\n    options: {\n      filter: true,\n      filterType: 'dropdown',\n      sort: true,\n      setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n    }\n    },\n];\n  let responseData = [];\n  data.map((item => {\n    responseData.push(\n      {\n        p_id: item[\"p_id\"], \n        operator: item[\"Operator\"], \n        model: item[\"Model\"], \n        type: item[\"Type\"],  \n        serialNo: item[\"Serial_No\"],  \n        date: DateConverter(item[\"date\"]),  \n        failureFlag: item[\"Failure Flag\"],  \n        maintTrans: item[\"Maint Trans\"],   \n        maintCanc: item[\"Maintenance Cancellations\"],   \n        maintDel: item[\"Maintenance Delays\"],  \n        inspection: item[\"Inspection\"],  \n        campType: item[\"CampType\"],   \n        MRB: item[\"MRB\"],   \n        discrepancy: item[\"Discrepancy\"],  \n        corActions: item[\"Corrective Action\"], \n        totalHours: item[\"AC Total Hours\"],  \n        totalCycles: item[\"AC Total Cycles\"],  \n        squawkSource:  item[\"Squawk Source\"],\n        ATA: item[\"ATA\"],\n        station: item[\"Station\"],\n        ATA_SUB: item[\"ATA_SUB\"],\n        ATA_Main: item[\"ATA_Main\"],\n      }\n    );\n     return responseData\n   }\n  ));\n\nconst options = {\n  filter: true,\n  filterType: 'multiselect',\n  responsive: \"standard\",\n  fixedHeader: true,\n  expandableRows: true,\n  renderExpandableRow: (rowData, rowMeta) => {\n    return (    \n    <TableRow>\n        <TableCell colSpan={rowData.length+1}>\n        <CorrelationSubTable\n          p_id = {rowData[0]}\n          dateFrom = {dateFrom}\n          dateTo = {dateTo}\n          EqID = {EqID}\n          ATAMain = {ATAMain}\n        />\n        </TableCell>\n    </TableRow>\n    );\n  },\n  textLabels: {\n    body: {\n        noMatch: loading ? 'Please wait, loading data ...' : \"Sorry, there is no matching data to display\"\n    },\n},\n  fixedSelectColumn: true,\n  downloadOptions: {\n    filename: 'PM Report from ' + dateFrom + ' to ' + dateTo + '.csv',\n    separator: ',',\n  },\n  draggableColumns: {\n    enabled: false,\n    transitionTime: 300,\n  },\n  elevation: 4,\n  rowsPerPage: 20,\n  rowsPerPageOptions: [20, 50],\n  selectToolbarPlacement:\"none\",\n};\n\nconst theme = createMuiTheme({\n  palette: {type: 'light'},\n  typography: {useNextVariants: true},\n});\n\n  return (\n    <div className={classes.root}>\n    <Paper className={classes.paper}>\n        <div className ={classes.card}>\n          <h2>Correlation Filters</h2>\n        </div>\n        <div className={classes.container}>\n        <Grid className={classes.Grid} container spacing={3}> \n          <Grid item xs={3}>     \n            <ATAMainSelector \n              handleATAChange = {handleATAChange}\n            />              \n          </Grid>     \n          <Grid item xs={3}>     \n            <EqIDSelector \n              handleEqIDChange = {handleEqIDChange}\n            />                   \n          </Grid>    \n          <Grid item xs={2}>      \n            <DatePicker \n              label = \"From\"\n              handleDateFrom = {handleDateFrom}\n            />   \n          </Grid>\n          <Grid item xs={2}>         \n            <DatePicker \n              label = \"To\"\n              handleDateTo = {handleDateTo}\n            />   \n          </Grid>\n          <Grid item xs={2}>  \n            <Button \n              variant=\"contained\" \n              onClick = {async()=>handleGeneratePMTable()}\n              className={classes.button}>\n                Generate Correlation Table\n            </Button>  \n          </Grid>     \n          </Grid>      \n          </div>\n      </Paper>\n    {data !== \"\" && data !== \"undefined\" && PMValue === 1 &&\n      <>\n      <Grid className={classes.TableGrid} container spacing={3}> \n          <Grid item xs={12}>\n            <MuiThemeProvider theme={theme}>\n              <MUIDataTable\n                title=\"PM Report\"\n                data={responseData}\n                columns={columns}\n                options={options}\n              />\n            </MuiThemeProvider> \n          </Grid> \n        </Grid> \n      </>\n    }\n  </div>\n  );\n  }\n\nexport default PMTable;\n\n","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/MdcMessages/GenerateReport/Selectors.js",["176","177"],"import React,{useState,useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width:'90%',\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(1),\n  },\n  container:{\n    margin: '0px 50px 0px 0px',\n  },\n  autocomplete:{\n    margin: theme.spacing(0),\n    width:'90%',\n    minWidth: 120,\n  }\n}));\n\nconst AirlineList = ['SKW'];\nconst MessagesList = ['Include', 'Exclude'];\n\nexport const AirlineOperatorSelector = (props) => {\n  const classes = useStyles();\n  const [airline, setAirline] = useState('');\n\n  const handleAirlineChange = (event) => {\n    setAirline(event.target.value);\n    props.handleAirlineChange(event.target.value);\n  };\n\n  return(\n    <FormControl variant=\"outlined\" className={classes.formControl}>\n      <InputLabel id=\"demo-simple-select-outlined-label\">Airline Operator</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-outlined-label\"\n        id=\"demo-simple-select-outlined\"\n        value={airline}\n        onChange={handleAirlineChange}\n        label=\"Airline Operator\"\n      >\n      <MenuItem value=\"none\"> </MenuItem>\n      {AirlineList.map( item => \n        <MenuItem value={item} key={item}> {item} </MenuItem>\n      )};\n      </Select>\n    </FormControl>\n  );\n}\n\nexport const ATAMainSelector = (props) => {\n  const classes = useStyles();\n  const [ATAMain, setATAMain] = useState([]);\n  const [ATAMainList,setATAMainList] = useState([]);\n  useEffect(() => {\n    const path = 'https://mhirjapi.azurewebsites.net/api/GenerateReport/ata_main/ALL'\n\n    try{\n      axios.post(path).then(function (res) {\n        var data = JSON.parse(res.data);\n        let ATAArray = ['ALL'];\n        Object.values(data).map((item=>{\n          ATAArray.push(item.ATA_Main.toString());\n        }))\n        setATAMainList(ATAArray);\n      });\n    } catch (err) {\n      console.error(err);\n    }\n},[]);\n\n  const handleATAChange = (event, values) => {\n    const ATAValues = [];\n    if(values.includes(\"ALL\")){\n      ATAValues.push(\"ALL\");\n      setATAMain(ATAValues);\n      props.handleATAChange(\"ALL\");\n    }\n    else{\n      setATAMain(values);    \n      let ataList = Object.values(values).length >0 ?  \"('\"+ values.join(\"','\") +\"')\" : \"\";\n      props.handleATAChange(ataList);\n    }\n  };\n\n  return(\n    <Autocomplete\n    className={classes.autocomplete}\n    multiple\n    options={ATAMainList}\n    getOptionLabel={(item => item)}\n    value = {ATAMain}\n    filterSelectedOptions\n    onChange = {handleATAChange}\n    renderInput={(params) => (\n      <TextField\n        {...params}\n        variant=\"outlined\"\n        label=\"ATA Main\"\n        placeholder=\"ATA Main\"\n        />\n    )}\n  />\n  );\n}\n\nexport const EqIDSelector = (props) => {\n  const classes = useStyles();\n  const [EqID, setEqID] = useState([]);\n  const [EqList,setEqIDList] = useState([]);\n  useEffect(() => {\n    const path = 'https://mhirjapi.azurewebsites.net/api/GenerateReport/equation_id/ALL'\n\n    try{\n      axios.post(path).then(function (res) {\n        var data = JSON.parse(res.data);\n        let EQArray = ['NONE'];\n        Object.values(data).map((item=>{\n          EQArray.push(item.Equation_ID.toString());\n        }))\n        setEqIDList(EQArray);\n      });\n    } catch (err) {\n      console.error(err);\n    }\n},[]);\n\n  const handleEqIDChange = (event, values) => {\n    const EqIDValues = [];\n    if(values.includes(\"NONE\")){\n      EqIDValues.push(\"NONE\");\n      setEqID(EqIDValues);\n      props.handleEqIDChange(\"NONE\");\n    }\n    else{\n      setEqID(values);    \n      let eqIDLIST = Object.values(values).length >0 ?  \"('\"+ values.join(\"','\") +\"')\" : \"\";\n      props.handleEqIDChange(eqIDLIST);\n    }\n  };\n\n  return(\n\n    <Autocomplete\n        className={classes.autocomplete}\n        multiple\n        options={EqList}\n        getOptionLabel={(item => item)}\n        value = {EqID}\n        filterSelectedOptions\n        onChange = {handleEqIDChange}\n        searchEnabled = {true}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            variant=\"outlined\"\n            label=\"Exclude Equation ID\"\n            placeholder=\"EqID\"\n            />\n        )}\n      />\n  );\n};\n\nexport const MessagesSelector = (props) => {\n  const classes = useStyles();\n  const [messages, setIncludeMessages] = useState('');\n\n  const handleMessagesChange = (event) => {\n    let value = 0;\n    if(event.target.value === 'Include'){\n      value = 1;\n    }\n    setIncludeMessages(event.target.value);\n    props.handleMessagesChange(value);\n  };\n\n  return(\n    <FormControl variant=\"outlined\" className={classes.formControl}>\n    <InputLabel id=\"demo-simple-select-outlined-label\">Current Messages</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-outlined-label\"\n        id=\"demo-simple-select-outlined\"\n        value={messages}\n        onChange={handleMessagesChange}\n        label=\"Current Messages\"\n      >\n      <MenuItem value=\"none\"> </MenuItem>\n      {MessagesList.map( item => \n        <MenuItem value={item} key={item} >{item} </MenuItem>\n      )};\n      </Select>\n    </FormControl>\n  );\n}\n\nconst Selectors = (props) => {\n\n  return (\n    <div></div>\n  );\n};\n\n  export default Selectors;","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/MdcMessages/GenerateReport/DatePicker.js",["178"],"import React,{useState,Fragment} from 'react';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport moment from \"moment\";\n\nconst DatePicker = (props) => {\n  const [selectedDate, setDate] = useState(moment());\n  const [inputValue, setInputValue] = useState(moment().format(\"YYYY-MM-DD\"));\n\n  const handleDateChange = (date, value) => {\n    setDate(date);\n    setInputValue(value);\n    props.handleDateFrom ? props.handleDateFrom(value) : props.handleDateTo(value);\n  };\n\n  const dateFormatter = str => {\n    return str;\n  };\n\n  return (\n    <Fragment>\n      <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\n        <KeyboardDatePicker \n          style={{margin: \"12px 10px 10px\"}}\n          autoOk={true}\n            value={selectedDate}\n            format=\"YYYY-MM-DD\"\n            inputValue={inputValue}\n            onChange={handleDateChange}\n            rifmFormatter={dateFormatter}\n            label={props.label}\n            variant=\"inline\"\n        /> \n    </MuiPickersUtilsProvider>\n    </Fragment>\n  );\n};\n\nexport default DatePicker;","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/MdcMessages/Reports/Rawdata/RawDataTable.js",["179"],"import React,{useState} from 'react';\nimport MUIDataTable from \"mui-datatables\";\nimport {MuiThemeProvider, createMuiTheme} from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n//Date Imports\nimport {DateConverter} from '../../../Helper/Helper';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    alignItems:\"center\",\n    maxWidth: '92vw',\n    margin:  '20px',\n  },\n}));\n\nconst RawDataTable = (props) => {\n\n  const columns = [\n    {\n      name: \"aircraft\",\n      label: \"Aircraft\",\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n    },\n    {\n      name: 'tail', \n      label: 'Tail#',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n    },\n    {\n      name: 'fightLeg', \n      label: 'Flight Leg',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap', minWidth: \"90px\"}})\n      }\n    },\n    {\n      name: 'ATAMain', \n      label: 'ATAMain',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n    },\n    {\n      name: 'ATASub', \n      label: 'ATASub',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n    },\n    {\n      name: 'ATA', \n      label: 'ATA',\n      options: {\n       filter: false,\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n    },\n    {\n      name: 'ATADesc', \n      label: 'ATA Description',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n    },\n    {\n      name: 'LRU', \n      label: 'LRU',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n    },\n    {\n      name: 'date', \n      label: 'Date and Time',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n     },\n     {\n      name: 'MDCMessages', \n      label: 'MDC Messages',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap',minWidth: \"120px\"}})\n      }\n     },\n     {\n      name: 'status', \n      label: 'Status',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n     },\n     {\n      name: 'phase', \n      label: 'Phase',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n     },\n     {\n      name: 'type', \n      label: 'Type',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n     },\n     {\n      name: 'intermittent', \n      label: 'Intermittent',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n     },\n     {\n      name: 'equationID', \n      label: 'Equation ID',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap',minWidth: \"100px\"}})\n      }\n     },\n     {\n      name: 'diagnostic', \n      label: 'Diagnostic',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n     },\n     {\n      name: 'data', \n      label: 'Data Used to Determine Msg',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n     },\n     {\n      name: 'id', \n      label: 'ID',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n     },\n     {\n      name: 'flightNumber', \n      label: 'Flight Number',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n     },\n    ];\n\n    let data = [];\n    props.data?.map((item => {\n      data.push(\n          {\n            aircraft: item[\"Aircraft\"], \n            tail: item[\"Tail\"], \n            fightLeg: item[\"Flight Leg No\"], \n            ATAMain: item[\"ATA Main\"],  \n            ATASub: item[\"ATA Sub\"],  \n            ATA: item[\"ATA\"],  \n            ATADesc: item[\"ATA Description\"],  \n            LRU: item[\"LRU\"],   \n            date: DateConverter(item[\"DateAndTime\"]),   \n            MDCMessages: item[\"MDC Message\"],  \n            status: item[\"Status\"],  \n            phase: item[\"Flight Phase\"],  \n            type: item[\"Type\"],   \n            intermittent: item[\"Intermittent\"],   \n            equationID: item[\"Equation ID\"],  \n            source: item[\"Source\"], \n            diagnostic: item[\"Diagnostic Data\"],  \n            data: item[\"Data Used to Determine Msg\"],  \n            id:item[\"ID\"],\n            flightNumber: item[\"Flight\"],\n          }\n        );\n        return data;\n      }));\n\n    const options = {\n      filter: true,\n      filterType: 'multiselect',\n      responsive: \"standard\",\n      fixedHeader: true,\n      fixedSelectColumn: true,\n      downloadOptions: {\n        filename: 'MDC Raw Data from ' + props.rawDataConditions.fromDate + ' to ' + props.rawDataConditions.toDate + '.csv',\n        separator: ',',\n      },\n      draggableColumns: {\n        enabled: false,\n        transitionTime: 300,\n      },\n      textLabels: {\n        body: {\n            noMatch: props.loading ? 'Please wait, loading data ...' : \"Sorry, there is no matching data to display\"\n        },\n      },\n      elevation: 4,\n      rowsPerPage: 7,\n      rowsPerPageOptions: [7,20,50],\n      selectToolbarPlacement:\"none\",\n      tableBodyHeight: props.loading === true || data.length === 0 ? '200px' : '500px'\n    };\n\n    const theme = createMuiTheme({\n      palette: {type: 'light'},\n      typography: {useNextVariants: true},\n  });\n  \nconst classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={0}>\n        <Grid item xs={12}>\n            <MuiThemeProvider theme={theme}>\n              <MUIDataTable\n                title={\"MDC Raw Data\"}\n                data={data}\n                columns={columns}\n                options={options}\n              />\n            </MuiThemeProvider> \n        </Grid> \n      </Grid> \n    </div>\n  );\n}\nexport default RawDataTable;\n\n","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/MdcMessages/GenerateReport/Conditions.js",[],"/Users/navneetbhatti/Desktop/FrontEnd/src/Components/MdcMessages/Reports/HistoryReport/HistoryReport.js",["180"],"import React, {useState} from 'react';\nimport MUIDataTable from \"mui-datatables\";\nimport {MuiThemeProvider, createMuiTheme} from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    alignItems:\"center\",\n    maxWidth: '92vw',\n    margin:  '20px',\n  },\n  button:{\n    margin:'0px 30px 15px 0px',\n    backgroundColor:\"#C5D3E0\",\n    width: '100%',\n  },\n}));\n\nconst HistoryReport = (props) => {\n  const [flagList, setFlagList] = useState();\n  const [rowsSelectedState, setRowsSelected] = useState([]);\n\n  const HandleMultipleRowSelect = (rowsSelectedData, allRows, rowsSelected) => {\n    setRowsSelected(rowsSelected);\n    let FlagArray = [];\n    Object(rowsSelected).map((item => {\n      FlagArray.push(\"('\"+ data[item].ACSN +\"','\"+ data[item].B1Equation +\"')\");\n      return FlagArray;\n    }));\n    let flagList =  FlagArray.join(\", \");\n    setFlagList(flagList);\n    props.HandleMultipleRowSelectReport(flagList);\n  };\n\n  const columns = [\n    {\n      name: 'ACSN', \n      label: 'ACSN',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n    },\n    {\n      name: 'EICASMessages', \n      label: 'EICAS Related',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap', minWidth: \"90px\"}})\n      }\n    },\n    {\n      name: 'mdcMessages', \n      label: 'MDC Messages',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n    },\n    {\n      name: 'LRU', \n      label: 'LRU',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n    },\n    {\n      name: 'ATA', \n      label: 'ATA',\n      options: {\n       filter: false,\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n    },\n    {\n      name: 'B1Equation', \n      label: 'B1 Equation',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n    },\n    {\n      name: 'type', \n      label: 'Type',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n    },\n    {\n      name: 'equationDescription', \n      label: 'Equation Description',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n     },\n     {\n      name: 'totalOccurences', \n      label: 'Total Occurences',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap',minWidth: \"120px\"}})\n      }\n     },\n     {\n      name: 'consecutiveDays', \n      label: 'Consecutive Days',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap',minWidth: \"120px\"}})\n      }\n     },\n     {\n      name: 'ConsecutiveFlights', \n      label: 'Consecutive Flights',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n     },\n     {\n      name: 'intermittent', \n      label: 'Intermittent',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n     },\n     {\n      name: 'reasons', \n      label: 'Reasons For Flag',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n     },\n     {\n      name: 'priority', \n      label: 'Priority',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap',minWidth: \"100px\"}})\n      }\n     },\n     {\n      name: 'topMessage', \n      label: 'MHIRJ Known Message',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n     },\n     {\n      name: 'recommendation', \n      label: 'MHIRJ Recommended Action',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n     },\n     {\n      name: 'comments', \n      label: 'MHIRJ Additional Comment',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n     },\n     {\n      name: 'input', \n      label: 'MHIRJ Input',\n      options: {\n       filter: true,\n       filterType: 'dropdown',\n       sort: true,\n       setCellProps: () => ({style: {whiteSpace:'nowrap'}})\n      }\n     },\n    ];\n\n    let data = [];\n      props.data?.map((item => {\n        data.push(\n          {\n            ACSN: item[\"AC SN\"], \n            EICASMessages: item[\"EICAS Message\"], \n            mdcMessages: item[\"MDC Message\"],  \n            LRU: item[\"LRU\"],  \n            ATA: item[\"ATA\"],  \n            B1Equation: item[\"B1-Equation\"],  \n            type: item[\"Type\"],   \n            equationDescription: item[\"Equation Description\"],   \n            totalOccurences: item[\"Total Occurences\"],  \n            consecutiveDays: item[\"Consective Days\"],\n            ConsecutiveFlights: item[\"Consecutive FL\"],  \n            intermittent: item[\"Intermittent\"],  \n            reasons: item[\"Reason(s) for flag\"],   \n            priority: item[\"Priority\"],   \n            topMessage: item[\"Known Top Message - Recommended Documents\"],  \n            recommendation: item[\"MHIRJ ISE Recommendation\"], \n            comments: item[\"Additional Comments\"],  \n            input: item[\"MHIRJ ISE Input\"],  \n          }\n        );\n        return data;\n      }\n      ));\n\n    const options = {\n      selectableRows: 'multiple',\n      selectableRowsOnClick: true,\n      rowsSelected: rowsSelectedState,\n      onRowSelectionChange: HandleMultipleRowSelect,\n      filter: true,\n      filterType: 'multiselect',\n      responsive: \"standard\",\n      fixedHeader: true,\n      fixedSelectColumn: true,\n      downloadOptions: {\n        filename: 'History Report from ' + props.reportConditions.fromDate + ' to ' + props.reportConditions.toDate + '.csv',\n        separator: ',',\n      },\n      draggableColumns: {\n        enabled: false,\n        transitionTime: 300,\n      },\n      textLabels: {\n        body: {\n            noMatch: props.loading ? 'Please wait, loading data ...' : \"Sorry, there is no matching data to display\"\n        },\n    },\n      elevation: 4,\n      rowsPerPage: 7,\n      rowsPerPageOptions: [7,20,50],\n      selectToolbarPlacement:\"none\",\n      tableBodyHeight: props.loading === true || data.length === 0 ? '200px' : '500px'\n    };\n\n    const theme = createMuiTheme({\n      palette: {type: 'light'},\n      typography: {useNextVariants: true},\n  });\n  \nconst classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={0}>\n        <Grid item xs={12}>\n            <MuiThemeProvider theme={theme}>\n              <MUIDataTable\n                title= {props.title}\n                data={data}\n                columns={columns}\n                options={options}\n              />\n            </MuiThemeProvider> \n        </Grid> \n      </Grid> \n    </div>\n  );\n}\nexport default HistoryReport;\n\n","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Helper/Helper.js",["181"],"import React from 'react';\nimport moment from 'moment'\n\nexport const DateConverter = (date) => {\n  var t = moment(date);\n  var formatted = t.format('LLL');\n  return formatted;\n}\n\nexport const DateConverterCorrelation = (date) => {\n  var t = moment(date);\n  var formatted = t.format('LL');\n  return formatted;\n}\n\n\nconst Helper = () => {\n\n}\n\nexport default Helper;","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/MdcMessages/Reports/DailyReport/DailyReport.js",[],"/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Correlation/CorrelationSubTable.js",[],"/Users/navneetbhatti/Desktop/FrontEnd/src/Components/DateConverter.js",["182"],"import React from 'react';\nimport moment from 'moment'\n\nexport const DateConverter = (date) => {\n  var t = moment(date);\n  var formatted = t.format('l');\n  return formatted;\n}\n\n// const Helper = () => {\n\n// }\n\n// export default Helper;","/Users/navneetbhatti/Desktop/FrontEnd/src/Components/MdcMessages/GenerateReport/AnalysisInput.js",[],{"ruleId":"183","severity":1,"message":"184","line":9,"column":8,"nodeType":"185","messageId":"186","endLine":9,"endColumn":18},{"ruleId":"183","severity":1,"message":"187","line":25,"column":8,"nodeType":"185","messageId":"186","endLine":25,"endColumn":21},{"ruleId":"183","severity":1,"message":"188","line":37,"column":8,"nodeType":"185","messageId":"186","endLine":37,"endColumn":12},{"ruleId":"183","severity":1,"message":"189","line":41,"column":8,"nodeType":"185","messageId":"186","endLine":41,"endColumn":14},{"ruleId":"183","severity":1,"message":"190","line":157,"column":10,"nodeType":"185","messageId":"186","endLine":157,"endColumn":14},{"ruleId":"183","severity":1,"message":"191","line":172,"column":9,"nodeType":"185","messageId":"186","endLine":172,"endColumn":22},{"ruleId":"192","severity":1,"message":"193","line":207,"column":13,"nodeType":"194","endLine":207,"endColumn":78},{"ruleId":"195","severity":1,"message":"196","line":298,"column":61,"nodeType":"197","endLine":298,"endColumn":67},{"ruleId":"183","severity":1,"message":"198","line":5,"column":34,"nodeType":"185","messageId":"186","endLine":5,"endColumn":37},{"ruleId":"183","severity":1,"message":"199","line":27,"column":9,"nodeType":"185","messageId":"186","endLine":27,"endColumn":21},{"ruleId":"200","severity":1,"message":"201","line":44,"column":28,"nodeType":"202","messageId":"203","endLine":44,"endColumn":30},{"ruleId":"204","severity":1,"message":"205","line":54,"column":11,"nodeType":"206","messageId":"207","endLine":93,"endColumn":12},{"ruleId":"200","severity":1,"message":"201","line":99,"column":26,"nodeType":"202","messageId":"203","endLine":99,"endColumn":28},{"ruleId":"208","severity":1,"message":"209","line":175,"column":6,"nodeType":"210","endLine":175,"endColumn":8,"suggestions":"211"},{"ruleId":"212","severity":1,"message":"213","line":213,"column":49,"nodeType":"214","messageId":"215","endLine":213,"endColumn":50},{"ruleId":"183","severity":1,"message":"216","line":1,"column":27,"nodeType":"185","messageId":"186","endLine":1,"endColumn":36},{"ruleId":"183","severity":1,"message":"199","line":29,"column":9,"nodeType":"185","messageId":"186","endLine":29,"endColumn":21},{"ruleId":"183","severity":1,"message":"216","line":1,"column":27,"nodeType":"185","messageId":"186","endLine":1,"endColumn":36},{"ruleId":"183","severity":1,"message":"216","line":1,"column":27,"nodeType":"185","messageId":"186","endLine":1,"endColumn":36},{"ruleId":"183","severity":1,"message":"217","line":13,"column":8,"nodeType":"185","messageId":"186","endLine":13,"endColumn":22},{"ruleId":"183","severity":1,"message":"216","line":1,"column":27,"nodeType":"185","messageId":"186","endLine":1,"endColumn":36},{"ruleId":"183","severity":1,"message":"198","line":5,"column":10,"nodeType":"185","messageId":"186","endLine":5,"endColumn":13},{"ruleId":"183","severity":1,"message":"218","line":5,"column":15,"nodeType":"185","messageId":"186","endLine":5,"endColumn":28},{"ruleId":"183","severity":1,"message":"219","line":10,"column":10,"nodeType":"185","messageId":"186","endLine":10,"endColumn":16},{"ruleId":"183","severity":1,"message":"216","line":1,"column":27,"nodeType":"185","messageId":"186","endLine":1,"endColumn":36},{"ruleId":"183","severity":1,"message":"217","line":12,"column":8,"nodeType":"185","messageId":"186","endLine":12,"endColumn":22},{"ruleId":"183","severity":1,"message":"216","line":1,"column":27,"nodeType":"185","messageId":"186","endLine":1,"endColumn":36},{"ruleId":"183","severity":1,"message":"199","line":31,"column":9,"nodeType":"185","messageId":"186","endLine":31,"endColumn":21},{"ruleId":"183","severity":1,"message":"220","line":33,"column":10,"nodeType":"185","messageId":"186","endLine":33,"endColumn":20},{"ruleId":"183","severity":1,"message":"221","line":33,"column":22,"nodeType":"185","messageId":"186","endLine":33,"endColumn":35},{"ruleId":"212","severity":1,"message":"213","line":140,"column":49,"nodeType":"214","messageId":"215","endLine":140,"endColumn":50},{"ruleId":"183","severity":1,"message":"216","line":1,"column":27,"nodeType":"185","messageId":"186","endLine":1,"endColumn":36},{"ruleId":"183","severity":1,"message":"199","line":31,"column":9,"nodeType":"185","messageId":"186","endLine":31,"endColumn":21},{"ruleId":"183","severity":1,"message":"222","line":50,"column":9,"nodeType":"185","messageId":"186","endLine":50,"endColumn":19},{"ruleId":"183","severity":1,"message":"223","line":51,"column":9,"nodeType":"185","messageId":"186","endLine":51,"endColumn":17},{"ruleId":"183","severity":1,"message":"224","line":52,"column":9,"nodeType":"185","messageId":"186","endLine":52,"endColumn":12},{"ruleId":"200","severity":1,"message":"201","line":63,"column":28,"nodeType":"202","messageId":"203","endLine":63,"endColumn":30},{"ruleId":"204","severity":1,"message":"205","line":73,"column":9,"nodeType":"206","messageId":"207","endLine":112,"endColumn":10},{"ruleId":"200","severity":1,"message":"201","line":118,"column":24,"nodeType":"202","messageId":"203","endLine":118,"endColumn":26},{"ruleId":"183","severity":1,"message":"225","line":1,"column":15,"nodeType":"185","messageId":"186","endLine":1,"endColumn":23},{"ruleId":"183","severity":1,"message":"226","line":83,"column":8,"nodeType":"185","messageId":"186","endLine":83,"endColumn":12},{"ruleId":"183","severity":1,"message":"227","line":83,"column":13,"nodeType":"185","messageId":"186","endLine":83,"endColumn":20},{"ruleId":"200","severity":1,"message":"201","line":131,"column":44,"nodeType":"202","messageId":"203","endLine":131,"endColumn":46},{"ruleId":"200","severity":1,"message":"201","line":101,"column":42,"nodeType":"202","messageId":"203","endLine":101,"endColumn":44},{"ruleId":"200","severity":1,"message":"201","line":72,"column":38,"nodeType":"202","messageId":"203","endLine":72,"endColumn":40},{"ruleId":"200","severity":1,"message":"201","line":128,"column":38,"nodeType":"202","messageId":"203","endLine":128,"endColumn":40},{"ruleId":"183","severity":1,"message":"228","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":20},{"ruleId":"183","severity":1,"message":"225","line":1,"column":15,"nodeType":"185","messageId":"186","endLine":1,"endColumn":23},{"ruleId":"183","severity":1,"message":"229","line":22,"column":10,"nodeType":"185","messageId":"186","endLine":22,"endColumn":18},{"ruleId":"183","severity":1,"message":"230","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},{"ruleId":"183","severity":1,"message":"230","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'ListSubheader' is defined but never used.","'Corr' is defined but never used.","'Chart4' is defined but never used.","'page' is assigned a value but never used.","'handleOnClick' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Bar' is defined but never used.","'ChartJsImage' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'aircraftno_scatter' and 'pmMessage'. Either include them or remove the dependency array.","ArrayExpression",["231"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useEffect' is defined but never used.","'FormHelperText' is defined but never used.","'HorizontalBar' is defined but never used.","'Avatar' is defined but never used.","'chartData2' is assigned a value but never used.","'setChartData2' is assigned a value but never used.","'aircraftno' is assigned a value but never used.","'ata_main' is assigned a value but never used.","'msg' is assigned a value but never used.","'useState' is defined but never used.","'flag' is assigned a value but never used.","'setFlag' is assigned a value but never used.","'DateFnsUtils' is defined but never used.","'flagList' is assigned a value but never used.","'React' is defined but never used.",{"desc":"232","fix":"233"},"Update the dependencies array to be: [aircraftno_scatter, pmMessage]",{"range":"234","text":"235"},[4851,4853],"[aircraftno_scatter, pmMessage]"]