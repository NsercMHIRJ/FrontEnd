{"ast":null,"code":"var _jsxFileName = \"/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Stacked.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { HorizontalBar } from 'react-chartjs-2';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginLeft: '25px',\n    marginTop: '25px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    width: theme.spacing(185),\n    height: theme.spacing(120)\n  }\n}));\nexport default function Stacked() {\n  _s();\n\n  const classes = useStyles();\n\n  const ChartJsImage = require('chartjs-to-image');\n\n  const [chartData1, setChartData1] = useState({});\n\n  function save(e) {\n    //save to png\n    const canvasSave = document.getElementById('chart1');\n    canvasSave.toBlob(function (blob) {\n      saveAs(blob, \"StackedChart.png\");\n    });\n  }\n\n  const [data_chart1, setData_chart1] = useState({\n    from_date: \"\",\n    to_date: \"\",\n    top_value: \"\"\n  });\n\n  function submit(e) {\n    e.preventDefault();\n    let aircraftno = [];\n    let ata_main = [];\n    let msg = [];\n    const path = 'https://mhirjapi.azurewebsites.net/api/Landing_Chart_B/' + data_chart1.top_value + '/' + data_chart1.from_date + '/' + data_chart1.to_date;\n    axios.post(path).then(res => {\n      //console.log(res,\"response\");\n      let data = JSON.parse(res.data);\n      let aircraftNos = Object.keys(data);\n      let dataMetaData = {};\n      aircraftNos.map(no => {\n        let airCraftObj = data[no];\n\n        for (let x in airCraftObj) {\n          if (dataMetaData[x]) dataMetaData[x].push(airCraftObj[x]);else dataMetaData[x] = [airCraftObj[x]];\n        }\n      });\n\n      const getUniqueBackgroundColor = code => {\n        switch (code) {\n          case '21':\n            return \"#ef5350\";\n\n          case '22':\n            return \"#ec407a\";\n\n          case '23':\n            return \"#ab47bc\";\n\n          case '24':\n            return \"#7e57c2\";\n\n          case '26':\n            return \"#5c6bc0\";\n\n          case '27':\n            return \"#42a5f5\";\n\n          case '28':\n            return \"#29b6f6\";\n\n          case '30':\n            return \"#26c6da\";\n\n          case '31':\n            return \"#26a69a\";\n\n          case '32':\n            return \"#66bb6a\";\n\n          case '33':\n            return \"#9ccc65\";\n\n          case '34':\n            return \"#d4e157\";\n\n          case '36':\n            return \"#ffee58\";\n\n          case '38':\n            return \"#ffca28\";\n\n          case '45':\n            return \"#ffa726\";\n\n          case '49':\n            return \"#8d6e63\";\n\n          case '71':\n            return \"#bdbdbd\";\n\n          case '77':\n            return \"#9e9d24\";\n\n          case '78':\n            return \"#00b8d4\";\n        }\n      };\n\n      const intiDataSet = dataMetaData => {\n        let codes = Object.keys(dataMetaData);\n        let finalDataset = [];\n        codes.map(code => {\n          let dataObj = {};\n          dataObj.label = code;\n          dataObj.data = dataMetaData[code];\n          dataObj.backgroundColor = getUniqueBackgroundColor(code);\n          finalDataset.push(dataObj);\n          dataObj.borderWidth = 0.5;\n          dataObj.borderColor = \"black\";\n        });\n        return finalDataset;\n      }; // console.log(\"aircraftNos=\",aircraftNos);\n\n\n      setChartData1({\n        labels: aircraftNos,\n        datasets: intiDataSet(dataMetaData)\n      });\n    }).catch(err => {//console.log(err);\n    });\n  }\n\n  function handle(e) {\n    const newdata = { ...data_chart1\n    };\n    newdata[e.target.id] = e.target.value;\n    setData_chart1(newdata); //console.log(newdata)\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.root1,\n          noValidate: true,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              style: {\n                color: \"#001C3E\",\n                textAlign: \"center\"\n              },\n              children: \"Stacked Chart for Magnitude of Messages in data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(TextField, {\n              onChange: e => handle(e),\n              id: \"top_value\",\n              value: data_chart1.top_value,\n              label: \"Top Values\",\n              defaultValue: \" \",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"  \", /*#__PURE__*/_jsxDEV(TextField, {\n              onChange: e => handle(e),\n              id: \"from_date\",\n              value: data_chart1.from_date,\n              label: \" SELECT FROM DATE \\xA0 \\xA0\",\n              type: \"date\",\n              defaultValue: \"2017-05-24\",\n              className: classes.textField,\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              onChange: e => handle(e),\n              id: \"to_date\",\n              value: data_chart1.to_date,\n              label: \" SELECT TO DATE \",\n              type: \"date\",\n              defaultValue: \"2017-05-24\",\n              className: classes.textField,\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingBottom: \"20px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: e => submit(e),\n              variant: \"contained\",\n              style: {\n                backgroundColor: \"#001C3E\",\n                color: \"WHITE\"\n              },\n              children: \"GENERATE  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 52\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: e => save(e),\n              variant: \"contained\",\n              style: {\n                backgroundColor: \"#001C3E\",\n                color: \"WHITE\",\n                float: 'right',\n                marginRight: \"1200px\"\n              },\n              children: \"SAVE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: /*#__PURE__*/_jsxDEV(HorizontalBar, {\n            id: \"chart1\",\n            data: chartData1,\n            options: {\n              title: {\n                display: true,\n                text: 'Magnitute of messages in data',\n                fontSize: 20\n              },\n              legend: {\n                display: true,\n                position: 'right'\n              },\n              scales: {\n                xAxes: [{\n                  stacked: true\n                }],\n                yAxes: [{\n                  scaleLabel: {\n                    display: true,\n                    labelString: 'Aircraft Serial Number',\n                    fontStyle: 'bold',\n                    fontColor: '#001C3E'\n                  },\n                  stacked: true\n                }]\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Stacked, \"9URC/SEtV3W1+8Y81MVB/z7fHzU=\", false, function () {\n  return [useStyles];\n});\n\n_c = Stacked;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stacked\");","map":{"version":3,"sources":["/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Stacked.js"],"names":["React","useState","useEffect","makeStyles","Paper","Grid","HorizontalBar","TextField","Button","saveAs","axios","useStyles","theme","root","flexGrow","marginLeft","marginTop","paper","padding","spacing","textAlign","color","palette","text","secondary","width","height","Stacked","classes","ChartJsImage","require","chartData1","setChartData1","save","e","canvasSave","document","getElementById","toBlob","blob","data_chart1","setData_chart1","from_date","to_date","top_value","submit","preventDefault","aircraftno","ata_main","msg","path","post","then","res","data","JSON","parse","aircraftNos","Object","keys","dataMetaData","map","no","airCraftObj","x","push","getUniqueBackgroundColor","code","intiDataSet","codes","finalDataset","dataObj","label","backgroundColor","borderWidth","borderColor","labels","datasets","catch","err","handle","newdata","target","id","value","root1","textField","shrink","paddingBottom","float","marginRight","title","display","fontSize","legend","position","scales","xAxes","stacked","yAxes","scaleLabel","labelString","fontStyle","fontColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { HorizontalBar } from 'react-chartjs-2';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginLeft: '25px',\n    marginTop: '25px',\n  },\n\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    width: theme.spacing(185),\n    height: theme.spacing(120),\n  },\n\n}));\n\n\nexport default function Stacked() {\n  const classes = useStyles();\n  const ChartJsImage = require('chartjs-to-image');\n  const [chartData1, setChartData1] = useState({});\n\n  function save(e) {\n    //save to png\n    const canvasSave = document.getElementById('chart1');\n    canvasSave.toBlob(function (blob) {\n      saveAs(blob, \"StackedChart.png\")\n    })\n  }\n\n  const [data_chart1, setData_chart1] = useState({\n    from_date: \"\",\n    to_date: \"\",\n    top_value: \"\"\n  });\n\n  function submit(e) {\n    e.preventDefault();\n    let aircraftno = [];\n    let ata_main = [];\n    let msg = [];\n\n\n    const path = 'https://mhirjapi.azurewebsites.net/api/Landing_Chart_B/' + data_chart1.top_value + '/' + data_chart1.from_date + '/' + data_chart1.to_date;\n    axios.post(path)\n      .then(res => {\n        //console.log(res,\"response\");\n\n        let data = JSON.parse(res.data);\n        let aircraftNos = Object.keys(data);\n        let dataMetaData = {};\n        aircraftNos.map(no => {\n          let airCraftObj = data[no];\n          for (let x in airCraftObj) {\n            if (dataMetaData[x]) dataMetaData[x].push(airCraftObj[x]);\n            else dataMetaData[x] = [airCraftObj[x]];\n          }\n        \n      \n      })\n      const getUniqueBackgroundColor = (code) => {\n        switch(code){\n          case '21':\n            return \"#ef5350\";\n          case '22':\n            return \"#ec407a\";\n          case '23':\n            return \"#ab47bc\";\n          case '24':\n            return \"#7e57c2\"\n          case '26':\n            return \"#5c6bc0\";\n          case '27':\n            return \"#42a5f5\";\n          case '28':\n            return \"#29b6f6\";\n          case '30':\n            return \"#26c6da\";\n          case '31':\n            return \"#26a69a\";\n          case '32':\n            return \"#66bb6a\";\n          case '33':\n            return \"#9ccc65\";\n          case '34':\n            return \"#d4e157\";\n          case '36':\n              return \"#ffee58\";\n          case '38':\n              return \"#ffca28\";\n          case '45':\n            return \"#ffa726\";\n          case '49':\n            return \"#8d6e63\";\n          case '71':\n            return \"#bdbdbd\";\n          case '77':\n            return \"#9e9d24\";\n          case '78':\n            return \"#00b8d4\";\n        }\n      }\n\n      const intiDataSet = (dataMetaData) => {\n        let codes = Object.keys(dataMetaData);\n        let finalDataset = [];\n        codes.map(code => {\n          let dataObj = {};\n          dataObj.label = code;\n          dataObj.data = dataMetaData[code];\n          dataObj.backgroundColor = getUniqueBackgroundColor(code);\n          finalDataset.push(dataObj);\n          dataObj.borderWidth= 0.5;\n          dataObj.borderColor=\"black\";\n        });\n        return finalDataset;\n      }\n     // console.log(\"aircraftNos=\",aircraftNos);\n      setChartData1({\n      labels: aircraftNos,\n      datasets: intiDataSet(dataMetaData)\n      \n    });\n    })\n    .catch(err => {\n      //console.log(err);\n    });\n  }\n  function handle(e) {\n    const newdata = { ...data_chart1 }\n    newdata[e.target.id] = e.target.value\n    setData_chart1(newdata)\n    //console.log(newdata)\n\n  }\n  return (\n\n    <div className={classes.root}>\n      <Grid container spacing={12}>\n        <Grid item xs={12}>\n          <form className={classes.root1} noValidate autoComplete=\"off\">\n            <div><h1 style={{ color: \"#001C3E\", textAlign: \"center\" }}>Stacked Chart for Magnitude of Messages in data</h1></div>\n            <div> <TextField onChange={(e) => handle(e)} id=\"top_value\" value={data_chart1.top_value} label=\"Top Values\" defaultValue=\" \" variant=\"outlined\" /></div>\n            <br></br>\n            <div>  <TextField onChange={(e) => handle(e)} id=\"from_date\" value={data_chart1.from_date} label=\" SELECT FROM DATE &nbsp; &nbsp;\" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{ shrink: true, }} />\n              <TextField onChange={(e) => handle(e)} id=\"to_date\" value={data_chart1.to_date} label=\" SELECT TO DATE \" type=\"date\" defaultValue=\"2017-05-24\" className={classes.textField} InputLabelProps={{ shrink: true, }} /></div>\n            <br></br>\n            <div style={{ paddingBottom: \"20px\" }}><Button onClick={(e) => submit(e)} variant=\"contained\" style={{ backgroundColor: \"#001C3E\", color: \"WHITE\" }}>GENERATE  </Button>\n              <Button onClick={(e) => save(e)} variant=\"contained\" style={{ backgroundColor: \"#001C3E\", color: \"WHITE\", float: 'right', marginRight: \"1200px\" }}>SAVE</Button></div>\n          </form>\n          <Paper className={classes.paper}>\n            <HorizontalBar\n              id=\"chart1\"\n              data={chartData1}\n              options={{\n                title: {\n                  display: true,\n                  text: 'Magnitute of messages in data',\n                  fontSize: 20\n                },\n                legend: {\n                  display: true,\n                  position: 'right'\n                },\n                scales: {\n                  xAxes: [{\n                    stacked: true\n                  }],\n                  yAxes: [{\n                    scaleLabel: {\n                      display: true,\n                      labelString: 'Aircraft Serial Number',\n                      fontStyle: 'bold',\n                      fontColor: '#001C3E'\n                    },\n                    stacked: true\n                  }]\n                }\n              }}\n            /></Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}