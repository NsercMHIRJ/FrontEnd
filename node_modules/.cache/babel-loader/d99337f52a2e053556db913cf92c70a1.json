{"ast":null,"code":"var _jsxFileName = \"/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Scatter1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { Scatter } from 'react-chartjs-2';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginLeft: '25px',\n    marginTop: '25px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    width: theme.spacing(185),\n    height: theme.spacing(120)\n  }\n}));\nexport default function Scatter1() {\n  _s();\n\n  const classes = useStyles();\n\n  const ChartJsImage = require('chartjs-to-image');\n\n  const [chartData1, setChartData1] = useState({});\n  const [chartData2, setChartData2] = useState({});\n  let aircraftno_scatter = [];\n  let mdcMessage = [];\n\n  function save(e) {\n    //save to png\n    const canvasSave = document.getElementById('chart1');\n    canvasSave.toBlob(function (blob) {\n      saveAs(blob, \"Chart1.png\");\n    });\n  }\n\n  const [data_chart1, setData_chart1] = useState({\n    from_date: \"\",\n    to_date: \"\"\n  });\n\n  function submit(e) {\n    e.preventDefault();\n    const path = 'https://mhirjapi.azurewebsites.net/api/scatter_chart_MDC_PM/' + data_chart1.from_date + '/' + data_chart1.to_date; //const path = 'http://40.82.160.131/api/scatter_chart_MDC_PM/' + data_chart1.select_date;\n    //console.log(path);\n\n    axios.post(path).then(res => {\n      for (const dataObj of JSON.parse(res.data)) {\n        let mdc = parseInt(dataObj.MDC_Message_Cnt);\n        let pm = parseInt(dataObj.MX_actions);\n        aircraftno_scatter.push(dataObj.aircraftno);\n        mdcMessage.push({\n          \"x\": mdc,\n          \"y\": pm\n        });\n      }\n\n      console.log(mdcMessage);\n      setChartData1({\n        labels: aircraftno_scatter,\n        datasets: [{\n          label: \"Fleet Status\",\n          data: mdcMessage,\n          backgroundColor: \"#d8e4f0\",\n          borderWidth: 2,\n          borderColor: \"black\",\n          pointRadius: 5\n        }]\n      });\n    }).catch(err => {//console.log(err);\n    });\n  }\n\n  function handle(e) {\n    const newdata = { ...data_chart1\n    };\n    newdata[e.target.id] = e.target.value;\n    setData_chart1(newdata); //console.log(newdata)\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.root1,\n          noValidate: true,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                color: \"#001C3E\",\n                textAlign: \"center\"\n              },\n              children: \"FLEET STATUS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"  \", /*#__PURE__*/_jsxDEV(TextField, {\n              onChange: e => handle(e),\n              id: \"from_date\",\n              value: data_chart1.from_date,\n              label: \" SELECT FROM DATE \\xA0 \\xA0\",\n              type: \"date\",\n              defaultValue: \" \",\n              className: classes.textField,\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              onChange: e => handle(e),\n              id: \"to_date\",\n              value: data_chart1.to_date,\n              label: \" SELECT TO DATE \",\n              type: \"date\",\n              defaultValue: \" \",\n              className: classes.textField,\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingBottom: \"20px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              id: \"Button\",\n              onClick: e => submit(e),\n              variant: \"contained\",\n              style: {\n                backgroundColor: \"#001C3E\",\n                color: \"WHITE\"\n              },\n              children: \"GENERATE  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 52\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: e => save(e),\n              variant: \"contained\",\n              style: {\n                backgroundColor: \"#001C3E\",\n                color: \"WHITE\",\n                float: 'right',\n                marginRight: \"1200px\"\n              },\n              children: \"SAVE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: /*#__PURE__*/_jsxDEV(Scatter, {\n            id: \"chart1\",\n            data: chartData1,\n            options: {\n              legend: {\n                display: false\n              },\n              tooltips: {\n                displayColors: false,\n                backgroundColor: 'black',\n                titleFontColor: 'rgb(255,255,255)',\n                bodyFontColor: 'rgb(255,255,255)',\n                footerFontColor: 'rgb(255,255,255)',\n                footerFontStyle: 'normal',\n                callbacks: {\n                  title: function (item, everything) {\n                    return;\n                  },\n                  label: function (item, everything) {\n                    console.log(item, everything);\n                    let ind = item.index;\n                    let aircraft_name = everything.labels[ind];\n                    return \"Aircraft: \" + aircraft_name;\n                  },\n                  footer: function (item, everything) {\n                    console.log(item, everything);\n                    let xvalue = item[0].xLabel;\n                    let yvalue = item[0].yLabel;\n                    return \"x =\" + xvalue + ',' + \" y = \" + yvalue;\n                  }\n                }\n              },\n              scales: {\n                xAxes: [{\n                  type: 'linear',\n                  position: 'bottom',\n                  scaleLabel: {\n                    display: true,\n                    labelString: '# of MDC Messages- Last 7 days',\n                    fontStyle: 'bold',\n                    fontColor: '#001C3E'\n                  }\n                }],\n                yAxes: [{\n                  display: true,\n                  scaleLabel: {\n                    display: true,\n                    labelString: '# of log-book entries',\n                    fontStyle: 'bold',\n                    fontColor: '#001C3E'\n                  }\n                }],\n                title: {\n                  display: true,\n                  text: 'Scatter Plot',\n                  fontSize: 20\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Scatter1, \"OZHvdx7cvlbxzO+jiIQRqltr3GA=\", false, function () {\n  return [useStyles];\n});\n\n_c = Scatter1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scatter1\");","map":{"version":3,"sources":["/Users/navneetbhatti/Desktop/FrontEnd/src/Components/Scatter1.js"],"names":["React","useState","useEffect","makeStyles","Paper","Grid","Scatter","TextField","Button","saveAs","axios","useStyles","theme","root","flexGrow","marginLeft","marginTop","paper","padding","spacing","textAlign","color","palette","text","secondary","width","height","Scatter1","classes","ChartJsImage","require","chartData1","setChartData1","chartData2","setChartData2","aircraftno_scatter","mdcMessage","save","e","canvasSave","document","getElementById","toBlob","blob","data_chart1","setData_chart1","from_date","to_date","submit","preventDefault","path","post","then","res","dataObj","JSON","parse","data","mdc","parseInt","MDC_Message_Cnt","pm","MX_actions","push","aircraftno","console","log","labels","datasets","label","backgroundColor","borderWidth","borderColor","pointRadius","catch","err","handle","newdata","target","id","value","root1","textField","shrink","paddingBottom","float","marginRight","legend","display","tooltips","displayColors","titleFontColor","bodyFontColor","footerFontColor","footerFontStyle","callbacks","title","item","everything","ind","index","aircraft_name","footer","xvalue","xLabel","yvalue","yLabel","scales","xAxes","type","position","scaleLabel","labelString","fontStyle","fontColor","yAxes","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { Scatter } from 'react-chartjs-2';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginLeft: '25px',\n    marginTop: '25px',\n  },\n\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    width: theme.spacing(185),\n    height: theme.spacing(120),\n  },\n\n}));\n\n\nexport default function Scatter1() {\n  const classes = useStyles();\n  const ChartJsImage = require('chartjs-to-image');\n  const [chartData1, setChartData1] = useState({});\n  const [chartData2, setChartData2] = useState({});\n  let aircraftno_scatter = [];\n  let mdcMessage = [];\n\n  function save(e) {\n    //save to png\n    const canvasSave = document.getElementById('chart1');\n    canvasSave.toBlob(function (blob) {\n      saveAs(blob, \"Chart1.png\")\n    })\n  }\n\n  const [data_chart1, setData_chart1] = useState({\n    from_date: \"\",\n    to_date: \"\"\n  });\n\n  function submit(e) {\n    e.preventDefault();\n\n    const path = 'https://mhirjapi.azurewebsites.net/api/scatter_chart_MDC_PM/' + data_chart1.from_date + '/' + data_chart1.to_date;\n    //const path = 'http://40.82.160.131/api/scatter_chart_MDC_PM/' + data_chart1.select_date;\n\n\n    //console.log(path);\n    axios.post(path)\n      .then(res => {\n        for (const dataObj of JSON.parse(res.data)) {\n          let mdc = parseInt(dataObj.MDC_Message_Cnt)\n          let pm = parseInt(dataObj.MX_actions)\n          aircraftno_scatter.push(dataObj.aircraftno)\n          mdcMessage.push({ \"x\": mdc, \"y\": pm })\n\n        }\n        console.log(mdcMessage);\n        setChartData1({\n          labels: aircraftno_scatter,\n          datasets: [\n            {\n              label: \"Fleet Status\",\n              data: mdcMessage,\n              backgroundColor: \"#d8e4f0\",\n              borderWidth: 2,\n              borderColor: \"black\",\n              pointRadius: 5\n\n            }\n          ]\n        });\n      })\n      .catch(err => {\n        //console.log(err);\n      });\n\n  }\n  function handle(e) {\n    const newdata = { ...data_chart1 }\n    newdata[e.target.id] = e.target.value\n    setData_chart1(newdata)\n    //console.log(newdata)\n\n  }\n  return (\n\n    <div className={classes.root}>\n      <Grid container spacing={12}>\n        <Grid item xs={12}>\n          <form className={classes.root1} noValidate autoComplete=\"off\">\n\n            <div><h2 style={{ color: \"#001C3E\", textAlign: \"center\" }}>FLEET STATUS</h2></div>\n            <div>  <TextField onChange={(e) => handle(e)} id=\"from_date\" value={data_chart1.from_date} label=\" SELECT FROM DATE &nbsp; &nbsp;\" type=\"date\" defaultValue=\" \" className={classes.textField} InputLabelProps={{ shrink: true, }} />\n              <TextField onChange={(e) => handle(e)} id=\"to_date\" value={data_chart1.to_date} label=\" SELECT TO DATE \" type=\"date\" defaultValue=\" \" className={classes.textField} InputLabelProps={{ shrink: true, }} /></div>\n            <br></br>\n            <div style={{ paddingBottom: \"20px\" }}><Button id=\"Button\" onClick={(e) => submit(e)} variant=\"contained\" style={{ backgroundColor: \"#001C3E\", color: \"WHITE\" }}>GENERATE  </Button>\n              <Button onClick={(e) => save(e)} variant=\"contained\" style={{ backgroundColor: \"#001C3E\", color: \"WHITE\", float: 'right', marginRight: \"1200px\" }}>SAVE</Button></div>\n          </form>\n\n          <Paper className={classes.paper}>\n            <Scatter\n              id=\"chart1\"\n              data={chartData1}\n              options={{\n                legend: { display: false },\n                tooltips: {\n\n                  displayColors: false,\n                  backgroundColor: 'black',\n                  titleFontColor: 'rgb(255,255,255)',\n                  bodyFontColor: 'rgb(255,255,255)',\n                  footerFontColor: 'rgb(255,255,255)',\n                  footerFontStyle: 'normal',\n\n                  callbacks: {\n                    title: function (item, everything) {\n                      return;\n                    },\n                    label: function (item, everything) {\n                      console.log(item, everything);\n                      let ind = item.index;\n                      let aircraft_name = everything.labels[ind];\n                      return \"Aircraft: \" + aircraft_name;\n                    },\n\n                    footer: function (item, everything) {\n                      console.log(item, everything);\n                      let xvalue = item[0].xLabel;\n                      let yvalue = item[0].yLabel;\n                      return \"x =\" + xvalue +','+\" y = \" + yvalue;\n\n                    }\n                  }\n                },\n                scales: {\n                  xAxes: [{\n                    type: 'linear',\n                    position: 'bottom',\n                    scaleLabel: {\n                      display: true,\n                      labelString: '# of MDC Messages- Last 7 days',\n                      fontStyle: 'bold',\n                      fontColor: '#001C3E'\n\n                    },\n                  }],\n                  yAxes: [{\n                    display: true,\n                    scaleLabel: {\n                      display: true,\n                      labelString: '# of log-book entries',\n                      fontStyle: 'bold',\n                      fontColor: '#001C3E'\n                    }\n                  }],\n                  title: { display: true, text: 'Scatter Plot', fontSize: 20 },\n\n                }\n              }}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}